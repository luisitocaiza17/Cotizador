diff --git a/WebContent/dashboard/AgriCotizacionesEstado.jsp b/WebContent/dashboard/AgriCotizacionesEstado.jsp
--- a/WebContent/dashboard/AgriCotizacionesEstado.jsp
+++ b/WebContent/dashboard/AgriCotizacionesEstado.jsp
@@ -39,5 +39,17 @@
 		estadosList = $("#estadoNuevo").data(
 		"kendoMultiSelect");
 		
+		//Carga Archivo
+		$("#files").kendoUpload({
+			async : {
+				saveUrl : "../AgriCotizacionesEstadoController",
+				removeUrl: "../AgriCotizacionesEstadoController"
+			},
+			multiple : false,
+			upload : onUpload,
+			success : onSuccess
+		    //cancel: onCancel
+		});
+			
 		cargarEstado();
 		
@@ -42,5 +54,22 @@
 		cargarEstado();
 		
+		$('#content-Upload').hide();
+		$('#content-cargaMasiva').hide();
+		$('#btnImportar').hide();
+		
+		//Boton Carga Masiva
+		$('#btnAprobacionMasiva').click(function(){
+			$('#dataTableMasiva').hide();
+ 			$('#datatableError').html('');
+ 			$("#content-cargaMasiva").hide();
+			$("#content-Upload").show();
+    	 });
+		$('#LimpiarBtn').click(function(){
+			$('#content-Upload').hide();
+			$('#content-cargaMasiva').hide();
+			$('#btnImportar').hide();
+    	 });
+		
 	});
 	
 	function cargarEstado(){
@@ -64,6 +93,32 @@
 		});
 	}
 	
+	function onSuccess(e) {
+		if (e.operation == "upload") {
+			nombreArchivo = e.files[0].name;
+			$('#btnImportar').show();
+		} else {
+			nombreArchivo = "";
+			$('#btnImportar').hide();
+		}
+	}
+
+	function onUpload(e) {
+		// Array with information about the uploaded files
+		var files = e.files;
+		// Check the extension of each file and abort the upload if it is not .jpg
+		$.each(files, function() {
+			if (this.extension.toLowerCase() != ".xls"
+					&& this.extension.toLowerCase() != ".xlsx") {
+				alert("Por favor seleccionar el archivo correcto.");
+				e.preventDefault();
+			}
+			else{
+				$('#btnImportar').prop('disabled', false);
+			}
+		});
+	}
+	
 	function GuardarCambio(){
 		
 		
@@ -231,33 +286,9 @@
         eliminar(dataItem.id);
     }
 	
-	function eliminar(id){
-		var r = confirm("Seguro que desea eliminar");
-		if(r == true){			
-			$.ajax({
-				url:'../AgriUsuarioOffline',
-				data:{
-					"idUsuario" : id,
-					"tipoConsulta" : "eliminar"
-				},
-				type : 'POST',
-				datatype : 'json',
-				success : function(data){
-					var exito= data.success;
-					if(exito=="true" || exito ===true){
-						alert("Eliminado");
-					}else{
-						alert("Se produjo un error al guardar el usuario");
-					}
-				}
-			});
-		}
-		Cargar();
-		$("#msgPopup").hide();
-	}
 	
 	
 function actualizar(cotizacion,estado){	
 	$("#cotizacionId").val(cotizacion);
 	$("#estadoActual").val(estado);
 }
@@ -258,9 +289,83 @@
 	
 	
 function actualizar(cotizacion,estado){	
 	$("#cotizacionId").val(cotizacion);
 	$("#estadoActual").val(estado);
 }
+
+
+function importar() {
+	if (nombreArchivo != "") {
+			$('#btnImportar').prop('disabled', true);
+			var tableLimpiar = $('#dataTableMasiva').DataTable();
+			 
+			tableLimpiar
+			    .clear()
+			    .draw();			
+			
+		$.ajax({
+			url : '../AgriCotizacionesEstadoController',
+			data : {
+				"tipoConsulta" : "importar",
+				"FileName" : nombreArchivo,
+				"actividad": "aprobar"
+			},
+			type : 'POST', 
+			datatype : 'json',
+			success : function(data) {
+				$("#loading").hide();
+				alert(data.mensaje);
+				var listDetalle = data.listDetalle;
+				if (typeof listDetalle != 'undefined') {
+					$('#datatableError').html('');
+					$("#content-cargaMasiva").show();
+					$('#dataTableMasiva').show();
+					
+					// Evitar Reinicializacion datatable
+					var oTable = $('#dataTableMasiva').dataTable();
+					oTable.fnDestroy();
+					
+					$.each(listDetalle, function(index) {
+						$("#datatableError").append(
+								"<tr class='odd gradeX'>" + "<td>"
+										+ listDetalle[index].cotizacion
+										+ "</td>" + "<td>"
+										+ listDetalle[index].detalle
+										+ "</td>" + "</tr>");
+					});
+					$("#content-Upload").hide();
+					//$('#dataTable tbody').html(auxiliar);
+
+					$('#dataTableMasiva')
+							.dataTable(
+									{
+										"pagingType" : "full",
+										"bFilter" : false,
+										"bLengthChange" : false,
+										"bSort" : false,
+										"scrollX": true, 
+										"iDisplayLength" : 10, // Limitamos el numero de filas en la paginacion
+										"dom" : 'T<"clear">lfrtip',
+										"tableTools" : {
+											"sSwfPath" : "/CotizadorWeb/static/js/sb-admin/plugins/dataTables/swf/copy_csv_xls.swf",
+										},
+										"fnDrawCallback" : ""
+									});
+				}
+				//Limpiar upload
+				var up = $('#files').data().kendoUpload;
+	 			var allLiElementsToBeRemoved = up.wrapper.find('.k-file');
+	 			up._removeFileEntry(allLiElementsToBeRemoved );
+	 			$('#btnImportar').hide();
+			}
+		});
+	} else {
+		alert("Seleccione un archivo.");
+	}
+}
+
+
+
 	
 function enviarDatos(tipoConsulta){
 	 var agenciaEnvio=$("#agencia option:selected").val();
@@ -389,7 +494,9 @@
 								<span class="glyphicon glyphicon-trash"></span> &nbsp; Limpiar
 							</button>
 							</th>
-							
+							<th>
+								<button  class="btn btn-primary" id="btnAprobacionMasiva" >Aprobación Masiva</button>
+							</th>
 					</tr>
 					<!-- </table>
 					</th> -->
@@ -438,6 +545,55 @@
 	</div>
 	<!-- Datatable -->
 	
+	<div class="row">
+		<div class="col-md-1">
+		</div>
+		<div class="col-md-8">
+			<div class="row" style="display: inline;" id="content-Upload">
+				<div class="col-lg-12">
+					<div class="table-responsive">
+					<table width="80%">
+							<tr >
+									<td colspan="2" >APROBACIÓN MASIVA</td>
+								</tr>
+							<tr >
+								<td  colspan="2"><input name="files" id="files" type="file" /></td>
+								
+								</tr>
+								<td><br /> <br /></td>
+								<tr align="right">
+									<td colspan="2"><button id="btnImportar" class="btn btn-primary" 
+										onclick="importar()">Subir Archivo</button></td>			
+								</tr>
+								
+								</table>
+					</div>
+				</div>
+			</div>
+			
+			<!-- Tabla con respuesta de aprovacion masiva -->
+			<div class="row" style="display: none;" id="content-cargaMasiva">
+				<div class="col-lg-12">
+					<div class="table-responsive">
+					<h3>Detalle de Cotizaciones <strong>procesadas</strong>.</h3>
+						<table class="table table-striped table-bordered table-hover"
+							id="dataTableMasiva">
+							<thead>
+								<tr>
+									<th># COTIZACIÓN</th>
+									<th>COMENTARIO</th>
+								</tr>
+							</thead>
+							<tbody id="datatableError" class="searchable">
+							</tbody>
+						</table>
+					</div>
+				</div>
+			</div>
+			</div>
+			<div class="col-md-1">
+			</div>
+		</div>
 	<style>	
 	 .confirm {
                     padding-top: 1em;
diff --git a/WebContent/dashboard/CotizacionAprobacionAgricola.jsp b/WebContent/dashboard/CotizacionAprobacionAgricola.jsp
--- a/WebContent/dashboard/CotizacionAprobacionAgricola.jsp
+++ b/WebContent/dashboard/CotizacionAprobacionAgricola.jsp
@@ -601,7 +601,7 @@
 		var VariablesCalc = VariablesCalculo;
 		var Bancos = 3.50;
 		var SeguroCamp = 0.50;
-		var DerechoEmision = 0.45;
+		var DerechoEmision = 0.50;
 		//var aniosCultivo=1;
 		var Iva = 12;
 		if (typeof VariablesCalc != "undefined") {
diff --git a/src/com/qbe/cotizador/dao/producto/agricola/AgriParametroXPuntoVentaDAO.java b/src/com/qbe/cotizador/dao/producto/agricola/AgriParametroXPuntoVentaDAO.java
--- a/src/com/qbe/cotizador/dao/producto/agricola/AgriParametroXPuntoVentaDAO.java
+++ b/src/com/qbe/cotizador/dao/producto/agricola/AgriParametroXPuntoVentaDAO.java
@@ -64,4 +64,9 @@
 	{
 		return getEntityManager().createNamedQuery("AgriParametroXPuntoVenta.obtenerTodos").getResultList();
 	}
+	
+	public  List<AgriParametroXPuntoVenta> buscarTodosCanal(BigInteger canalId)
+	{
+		return getEntityManager().createNamedQuery("AgriParametroXPuntoVenta.obtenerCanal").setParameter("canalId", canalId).getResultList();
+	}
 }
diff --git a/src/com/qbe/cotizador/model/AgriObjetoCotizacion.java b/src/com/qbe/cotizador/model/AgriObjetoCotizacion.java
--- a/src/com/qbe/cotizador/model/AgriObjetoCotizacion.java
+++ b/src/com/qbe/cotizador/model/AgriObjetoCotizacion.java
@@ -17,7 +17,10 @@
 @NamedQueries({
 	@NamedQuery(name="AgriObjetoCotizacion.buscarTodos", query="SELECT p FROM AgriObjetoCotizacion p"),
 	@NamedQuery(name="AgriObjetoCotizacion.buscarPorId", query="SELECT c FROM AgriObjetoCotizacion c where c.objetoCotizacionId=:id"),
-	@NamedQuery(name="AgriObjetoCotizacion.buscarPorObjetoOfflineId", query="SELECT c FROM AgriObjetoCotizacion c where c.objetoOfflineId=:objetoOfflineId")
+	@NamedQuery(name="AgriObjetoCotizacion.buscarPorObjetoOfflineId", query="SELECT c FROM AgriObjetoCotizacion c where c.objetoOfflineId=:objetoOfflineId"),
+	@NamedQuery(name="AgriObjetoCotizacion.buscarRepetidosPoliza", query="SELECT c.idCotizacion2 FROM AgriObjetoCotizacion c GROUP BY c.idCotizacion2 HAVING COUNT(c.idCotizacion2) > 1 "),
+	@NamedQuery(name="AgriObjetoCotizacion.buscarPorIdPoliza", query="SELECT c FROM AgriObjetoCotizacion c where c.idCotizacion2=:idCotizacion2"),
+	@NamedQuery(name="AgriObjetoCotizacion.buscarMaxId", query="SELECT max(c.objetoCotizacionId) FROM AgriObjetoCotizacion c where c.idCotizacion2=:idCotizacion2"),
 })
 public class AgriObjetoCotizacion implements Serializable {
 	private static final long serialVersionUID = 1L;
diff --git a/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java b/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
--- a/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
+++ b/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
@@ -402,6 +402,15 @@
 							"Telefono no valido"+in0.getTelfreferencia());
 				}
 				
+				//enviaban las fechas solo con 2 numeros, se puso el filtro para que envien en el formato correcto
+				String AnioSiembra=in0.getFechaSiembra();
+				String[] elementosFecha = AnioSiembra.split("/");
+				int comprobacionAnio=elementosFecha[2].length();
+							
+				if(comprobacionAnio !=4)
+					throw new Exception("Fecha de siembra no valida "+in0.getFechaSiembra()+" no valida, debe estar en el formato dd/MM/yyyy");
+				
+				
 				String EntidadId = "";
 				String NumeroCedula = in0.getCedula( ).trim();
 				//verificamos si la entidad existe para actualizarla ó crearla
diff --git a/src/com/qbe/cotizador/servicios/QBE/archivoPlano/GeneradorReporte.java b/src/com/qbe/cotizador/servicios/QBE/archivoPlano/GeneradorReporte.java
--- a/src/com/qbe/cotizador/servicios/QBE/archivoPlano/GeneradorReporte.java
+++ b/src/com/qbe/cotizador/servicios/QBE/archivoPlano/GeneradorReporte.java
@@ -165,7 +165,7 @@
 				PrecioAjuste = tipoCultivo.getPrecioAjuste();
 		}
 		parametersHeader.put("NRO_POLIZA", detalleCotizacion.getId().toString());
-
+		parametersHeader.put("Identificacion", cotizacion.getAsegurado().getIdentificacion());		
 		parametersHeader.put("VALOR_ASEGURADO", (new BigDecimal(detalleCotizacion.getSumaAseguradaTotal()).setScale(2,RoundingMode.HALF_UP)).toString());
 		parametersHeader.put("VALOR_ASEGURADO_TOTAL", (new BigDecimal(detalleCotizacion.getSumaAseguradaTotal()).setScale(2,RoundingMode.HALF_UP)).toString());
 
@@ -279,6 +279,7 @@
 		parametersHeader.put("Anexo", detalleCotizacion.getIdCotizacion2().toString());
 		//buscamos el asegurado
 		parametersHeader.put("Cliente", cotizacion.getAsegurado().getNombreCompleto());
+		parametersHeader.put("Identificacion", cotizacion.getAsegurado().getIdentificacion());		
 		parametersHeader.put("Provincia", detalleCotizacion.getProvinciaNombre());
 		parametersHeader.put("Canton", detalleCotizacion.getCantonNombre());
 		if(detalleCotizacion.getParroquiaNombre()==null || detalleCotizacion.getParroquiaNombre().equals("")){
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
@@ -372,13 +372,10 @@
 						cotizacionC.setPrimaNetaTotal(Prima);
 						cotizacionC.setImpIva(new Float(Iva));
 						cotizacionC.setTotalFactura(new Float(TotalFactura));
-						// Cambio valores cotizacion detalle
-//						List<CotizacionDetalle> cotizacionesD = new ArrayList<CotizacionDetalle>();
-//						CotizacionDetalleDAO cotizacionDDAO = new CotizacionDetalleDAO();
-//						if (cotizacionId != null && !cotizacionId.equals(""))
-//							cotizacionesD = cotizacionDDAO.buscarCotizacionDetallePorCotizacion(cotizacionC);
-							if (cotizacionDet.getId() != null) {
-								cotizacionDet.setPrimaNetaItem(new Float(Prima));
-								cotizacionDet.setSumaAseguradaItem(new Float(ValorAsegurado));
-								cotizacionDet.setTasa(new Float(Tasa) / 100);
+						cotizacionC.setTasaProductoValor(Double.parseDouble(Tasa));
+						
+						if (cotizacionDet.getId() != null) {
+							cotizacionDet.setPrimaNetaItem(new Float(Prima));
+							cotizacionDet.setSumaAseguradaItem(new Float(ValorAsegurado));
+							cotizacionDet.setTasa(new Float(Tasa));
 
@@ -384,4 +381,19 @@
 
-							}
+						}
+						//recalculamos Costos de produccion
+						
+						
+						AgriObjetoCotizacionDAO agriObjetoCotizacionDAO = new AgriObjetoCotizacionDAO();
+						AgriObjetoCotizacionTransaction agriObjetoCotizacionTransaction= new AgriObjetoCotizacionTransaction();
+						AgriObjetoCotizacion ObjectRecal=agriObjetoCotizacionDAO.buscarPorId(new BigInteger(cotizacionDet.getObjetoId()));
+						
+						Double SumaA=Double.parseDouble(ValorAsegurado);
+						Double hectareas=Double.parseDouble(""+ObjectRecal.getHectareasAsegurables());
+						Double costoP=SumaA/hectareas;
+						
+						
+						ObjectRecal.setCostoProduccion(Float.parseFloat(costoP.toString()));
+						ObjectRecal.setCostoProduccionQBE(Float.parseFloat(costoP.toString()));
+						agriObjetoCotizacionTransaction.editar(ObjectRecal);
 						
 					}
@@ -386,5 +398,6 @@
 						
 					}
+					
 					// /TODO:Si es canal sucre consumir el servicio web
 					// /Integracion con Canal sucre
 					AgriParametroXPuntoVentaDAO canalNotificacionDAO = new AgriParametroXPuntoVentaDAO();
@@ -759,7 +772,7 @@
 				if (variablesistema.size() > 0) {
 					VariablesObjetc = new JSONObject();
 					for (VariableSistema variable : variablesistema) {
-						if (variable.getNombre().equals("DERECHOS_EMISION")) {
+						if (variable.getNombre().equals("DERECHOS_EMISION_AGRICOLA")) {
 							valorDerechosEmision = Double.parseDouble(variable
 									.getValor());
 							VariablesObjetc.put("DerechosEmision",
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
@@ -379,6 +379,7 @@
 		parametersHeader.put("Anexo", detalleCotizacion.getIdCotizacion2().toString());
 		//buscamos el asegurado
 		parametersHeader.put("Cliente", cotizacion.getAsegurado().getNombreCompleto());
+		parametersHeader.put("Identificacion", cotizacion.getAsegurado().getIdentificacion());
 		parametersHeader.put("Provincia", detalleCotizacion.getProvinciaNombre());
 		parametersHeader.put("Canton", detalleCotizacion.getCantonNombre());
 		
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionesEstadoController.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionesEstadoController.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionesEstadoController.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionesEstadoController.java
@@ -1,3 +1,4 @@
 package com.qbe.cotizador.servlets.producto.agricola;
 
+import java.io.File;
 import java.io.IOException;
@@ -3,4 +4,7 @@
 import java.io.IOException;
+import java.math.BigInteger;
+import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 
 import javax.servlet.ServletException;
@@ -9,6 +13,15 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
+import org.apache.commons.fileupload.FileItem;
+import org.apache.commons.fileupload.FileUploadException;
+import org.apache.commons.fileupload.disk.DiskFileItemFactory;
+import org.apache.commons.fileupload.servlet.ServletFileUpload;
+
+import SucreAgro7.PQBE_wsACTUALIZAESTADOResponse;
+import SucreAgro7.SdtEstado;
+import SucreAgro7.SdtResponseQBEErroresItem;
+
 import com.google.gson.JsonArray;
 import com.qbe.cotizador.dao.cotizacion.CotizacionDAO;
 import com.qbe.cotizador.dao.cotizacion.EstadoDAO;
@@ -12,5 +25,11 @@
 import com.google.gson.JsonArray;
 import com.qbe.cotizador.dao.cotizacion.CotizacionDAO;
 import com.qbe.cotizador.dao.cotizacion.EstadoDAO;
+import com.qbe.cotizador.dao.producto.agricola.AgriCotizacionEM;
+import com.qbe.cotizador.dao.producto.agricola.AgriParametroXPuntoVentaDAO;
+import com.qbe.cotizador.dao.producto.agricola.CotizacionAprobacionDAO;
+import com.qbe.cotizador.model.AgriCotizacionAprobacion;
+import com.qbe.cotizador.model.AgriParametroXPuntoVenta;
+import com.qbe.cotizador.model.AgriSucreAuditoria;
 import com.qbe.cotizador.model.Cotizacion;
 import com.qbe.cotizador.model.Estado;
@@ -15,3 +34,4 @@
 import com.qbe.cotizador.model.Cotizacion;
 import com.qbe.cotizador.model.Estado;
+import com.qbe.cotizador.model.Usuario;
 import com.qbe.cotizador.transaction.cotizacion.CotizacionTransaction;
@@ -17,4 +37,5 @@
 import com.qbe.cotizador.transaction.cotizacion.CotizacionTransaction;
+import com.qbe.cotizador.transaction.producto.agricola.AgriSucreAuditoriaTransaction;
 
 import net.sf.json.JSONArray;
 import net.sf.json.JSONObject;
@@ -25,7 +46,8 @@
 @WebServlet("/AgriCotizacionesEstadoController")
 public class AgriCotizacionesEstadoController extends HttpServlet {
 	private static final long serialVersionUID = 1L;
-       
+	private String IdFileIds="";
+
     /**
      * @see HttpServlet#HttpServlet()
      */
@@ -53,6 +75,85 @@
 			String tipoConsulta = request.getParameter("tipoConsulta") == null ? "": request.getParameter("tipoConsulta");
 			JSONArray listaEstados = new JSONArray(); 
 			JSONObject estados= new JSONObject();
+			
+			if (tipoConsulta.equals("")){
+				// /Hacer una copia del archivo cargado para el archivo de emision
+				// masiva
+				DiskFileItemFactory factory = new DiskFileItemFactory();
+				ServletFileUpload upload = new ServletFileUpload(factory);
+				try {
+					List<FileItem> items = upload.parseRequest(request);
+					for (FileItem item : items) {
+						if (!item.isFormField()) {
+							// Process form file field (input type="file").
+							System.out.println("Field name: " + item.getFieldName());
+							System.out.println("File name: " + item.getName());
+							System.out.println("File size: " + item.getSize());
+							System.out.println("File type: " + item.getContentType());
+
+							//tomamos la ruta relativa de la clase para referenciar la plantilla
+							String rutaPlantilla = AgriSucreNotificacionErrores.class.getProtectionDomain().getCodeSource()
+									.getLocation().getPath();
+							rutaPlantilla=rutaPlantilla.replace("AgriSucreNotificacionErrores.class", "");
+							String rutaRelativaReporte="../../../../../../../../static/CotizacionesAprobarMasivo/";
+							rutaPlantilla=rutaPlantilla+rutaRelativaReporte;
+							
+							String fileName = item.getName();
+							try {
+								File saveFile = new File(
+										rutaPlantilla,
+										fileName);
+								saveFile.createNewFile();
+								item.write(saveFile);
+								System.out.println("Current folder: "
+										+ saveFile.getCanonicalPath());
+							} catch (Exception e) {
+								// TODO Auto-generated catch block
+								e.printStackTrace();
+							}
+						}
+					}
+				} catch (FileUploadException e) {
+					try {
+						throw new ServletException("Cannot parse multipart request.", e);
+					} catch (ServletException e1) {
+						// TODO Auto-generated catch block
+						e1.printStackTrace();
+					}
+				}
+
+			}
+			
+			if (tipoConsulta.equals("importar")) {
+				
+				String FileName = request.getParameter("FileName") == null ? "": request.getParameter("FileName");
+				String actividad = request.getParameter("actividad") == null ? "": request.getParameter("actividad");
+
+				String rutaPlantilla = this.getServletContext().getRealPath("")+ "/static/CotizacionesAprobarMasivo/" + FileName;
+				
+				List<AgriCotizacionEM> cotizacionList = new ArrayList<AgriCotizacionEM>();
+
+				if (FileName.endsWith(".xlsx")) {cotizacionList = ReadExelFile.readXLSXFileEstadoMasiva(rutaPlantilla);
+				} else if (FileName.endsWith(".xls")) {cotizacionList = ReadExelFile.readXLSXFileEstadoMasiva(rutaPlantilla);
+				}
+				JSONArray listDetalle = new JSONArray();
+				listDetalle = procesarCambios(cotizacionList);
+				
+				
+				if (listDetalle.size() > 0) {
+					String IdFile = IdFileIds;
+					IdFileIds="";
+					result.put("mensaje", "Archivo procesado.");
+					result.put("listDetalle", listDetalle);
+					result.put("IdFile", IdFile);
+					
+				} else {
+					result.put("mensaje",
+							"No se ha podido procesar el archivo.");
+				}
+			}
+			
+			
 			if(tipoConsulta.equals("cargarEstados")){
 				EstadoDAO estadoDAO = new EstadoDAO();
 				List<Estado> estado=estadoDAO.buscarTodos();
@@ -95,8 +196,7 @@
 					cotizacion.setEstado(estado);
 				}
 				CotizacionTransaction cotizacionTransaction = new CotizacionTransaction();
-				cotizacionTransaction.editar(cotizacion);
-				
+				cotizacionTransaction.editar(cotizacion);				
 			}
 		
 			result.put("success", Boolean.TRUE);
@@ -109,7 +209,4 @@
 			result.write(response.getWriter());
 			e.printStackTrace();
 		}
-		
-		
-		
 	}
@@ -115,3 +212,87 @@
 	}
-
+	
+	public JSONArray procesarCambios(List<AgriCotizacionEM> listado) {
+		JSONObject detalleProceso = new JSONObject();
+		JSONArray detalleProcesoList = new JSONArray();
+		CotizacionTransaction cotizacionTransaction = new CotizacionTransaction();
+		Cotizacion cotizacionC = new Cotizacion();
+		CotizacionDAO cotizacionCDAO = new CotizacionDAO();
+		String mensaje = "";
+		Date fechaActual= new Date();
+		try {
+			for (AgriCotizacionEM nuevaCotizacion : listado) {//recorremos el listado de cotizaciones que viende desde excel				
+				EstadoDAO estadoDAO = new EstadoDAO();
+				AgriSucreAuditoria agriSucreAuditoria2 = new AgriSucreAuditoria();
+				AgriSucreAuditoriaTransaction agriSucreAuditoriaTransaction2 = new AgriSucreAuditoriaTransaction();
+				
+				try {
+					if (nuevaCotizacion.getCotizacionId() != null && !nuevaCotizacion.getCotizacionId().equals(""))//verificamos si tiene el ID
+						cotizacionC = cotizacionCDAO.buscarPorId(nuevaCotizacion.getCotizacionId());
+					try{
+						//Auditoria Inicia el proceso de cotizacion:
+						//para saber a que hora se hizo la notificacion
+						agriSucreAuditoria2.setCanal("CAMBIO DE ESTADO");
+						agriSucreAuditoria2.setEstado("MASIVO");
+						agriSucreAuditoria2.setFecha(fechaActual);
+						agriSucreAuditoria2.setObjeto("Ingresa al proceso cambio de estado Cot:"+nuevaCotizacion.getCotizacionId());
+						agriSucreAuditoria2.setTramite(cotizacionC.getNumeroTramite());
+						agriSucreAuditoriaTransaction2.crear(agriSucreAuditoria2);
+						//fin de auditoria
+					}catch(Exception e){
+						e.printStackTrace();
+					}
+					String Objeto=agriSucreAuditoria2.getObjeto();
+					String EstadoAnterior="";
+					if (cotizacionC.getId() != null) {//verificamos si esta registrado en base
+						Estado estado = new Estado();
+						if(nuevaCotizacion.getEstado().equalsIgnoreCase("BAJA")){
+							EstadoAnterior=cotizacionC.getEstado().getNombre();
+							estado = estadoDAO.buscarPorNombre("Revocado", "Cotizacion");
+							if(estado.getNombre()==null)
+								throw new Exception("No se encuentra el estado "+nuevaCotizacion.getEstado()+" para poder actualizar la cotizacion");
+							if(estado.getNombre().equals(cotizacionC.getEstado().getNombre()))
+								throw new Exception("La cotizacion ya se encuentra en estado "+estado.getNombre());
+							cotizacionC.setEstado(estado);
+							//BORRAMOS EL NUMERO DE TRAMITE;
+							cotizacionC.setNumeroTramite(null);
+							//Auditoria
+							Objeto=Objeto+" Cotizacion: "+cotizacionC.getId()+" estado anterior "+EstadoAnterior+ " estado Actual "+estado.getNombre()+" Se borro el num tramite";
+							
+						}else{
+							EstadoAnterior=cotizacionC.getEstado().getNombre();
+							
+							estado = estadoDAO.buscarPorNombre(nuevaCotizacion.getEstado(), "Cotizacion");
+							if(estado.getNombre()==null)
+								throw new Exception("No se encuentra el estado "+nuevaCotizacion.getEstado()+" para poder actualizar la cotizacion");
+							if(estado.getNombre().equals(cotizacionC.getEstado().getNombre()))
+								throw new Exception("La cotizacion ya se encuentra en estado "+estado.getNombre());
+							cotizacionC.setEstado(estado);	
+							
+							Objeto=Objeto+" Cotizacion: "+cotizacionC.getId()+" estado anterior "+EstadoAnterior+ " estado Actual "+estado.getNombre();
+						}
+						cotizacionTransaction.editar(cotizacionC);		
+						agriSucreAuditoria2.setObjeto(Objeto);
+						agriSucreAuditoriaTransaction2.editar(agriSucreAuditoria2);						
+						detalleProceso.put("cotizacion", cotizacionC.getId());
+						detalleProceso.put("detalle", "Estado Correcto: "+estado.getNombre());
+						detalleProcesoList.add(detalleProceso);
+					}else{
+						throw new Exception("La cotizacion no existe");
+					}
+						
+				} catch (Exception e) {
+					detalleProceso.put("cotizacion", nuevaCotizacion.getCotizacionId());
+					detalleProceso.put("detalle", mensaje+"Se ha producido un error: "+e.getMessage());
+					detalleProcesoList.add(detalleProceso);
+					cotizacionTransaction.editar(cotizacionC);		
+					agriSucreAuditoria2.setObjeto(e.getMessage());
+					e.printStackTrace();
+				}
+			}
+		} catch (Exception e) {
+			System.out.println(e.getMessage());
+		} finally {
+			return detalleProcesoList;
+		}
+	}
 }
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriObjetoCotizacionController.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriObjetoCotizacionController.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriObjetoCotizacionController.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriObjetoCotizacionController.java
@@ -612,7 +612,8 @@
 							agriObjetoCotizacion.setAltitudNivelMar(Float.parseFloat(altitudNivelMar));
 
 						agriObjetoCotizacion.setTipoOrigen("PRONACA_CP");
-						
+						agriObjetoCotizacion.setCostoProduccion(Float.parseFloat(nuestroCosto));
+						agriObjetoCotizacion.setCostoProduccionQBE(Float.parseFloat(nuestroCosto));
 						agriObjetoCotizacion.setTipoCalculo(reglaId);
 						agriObjetoCotizacion.setObservacion(observaciones+""+reglaDetalle);
 						/***Proceso de creacion de las IdCotizaciones para facturacion***/
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/ReadExelFile.java b/src/com/qbe/cotizador/servlets/producto/agricola/ReadExelFile.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/ReadExelFile.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/ReadExelFile.java
@@ -26,6 +26,7 @@
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 
 import com.itextpdf.text.pdf.PdfStructTreeController.returnType;
+import com.qbe.cotizador.dao.producto.agricola.AgriCotizacionEM;
 import com.qbe.cotizador.model.Cotizacion;
 import com.sun.xml.wss.core.Timestamp;
 
@@ -346,5 +347,44 @@
 		return cotizacionArray;
 	}
 
+	public static List<AgriCotizacionEM> readXLSXFileEstadoMasiva(String rutaArchivo) throws IOException, ParseException
+	{
+
+		List<AgriCotizacionEM> cotizacionArray = new ArrayList<AgriCotizacionEM>();
+		InputStream ExcelFileToRead = new FileInputStream(rutaArchivo);
+		XSSFWorkbook  wb = new XSSFWorkbook(ExcelFileToRead);	
+
+		XSSFSheet sheet = wb.getSheetAt(0);
+		XSSFRow row; 
+		XSSFCell cell;
+
+		Iterator rows = sheet.rowIterator();
+		int i = 0;
+
+		while (rows.hasNext())
+		{
+
+			if(i<1){
+				rows.next();
+				i++;				
+				continue;				
+			}				
+
+			row=(XSSFRow) rows.next();
+
+			//Iterator cells = row.cellIterator();
+			AgriCotizacionEM AgriCotizacionEM = new AgriCotizacionEM();
+			if(readCell(row.getCell(0)).length() > 0 )
+				row.getCell(0).setCellType(Cell.CELL_TYPE_STRING);
+			String Id=readCell(row.getCell(0));
+			String Estado=readCell(row.getCell(1));
+			if(Id==null||Id.trim().equals("")||Id.trim().equals("null"))
+				break;
+			AgriCotizacionEM.setCotizacionId(Id);
+			AgriCotizacionEM.setEstado(Estado);
+			cotizacionArray.add(AgriCotizacionEM);
+		}
+		return cotizacionArray;
+	}
 
 }
