diff --git a/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java b/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
--- a/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
+++ b/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
@@ -404,7 +404,7 @@
 				/*if(in0.getCodigoFacilitador()!=null)
 					cotizacion.setAgenteId(new BigInteger(in0.getCodigoFacilitador()));	
 				else*/
-				cotizacion.setAgenteId(new BigInteger("1"));//VERIFICAR 			
+						
 				cotizacion.setGrupoProductoId(BigInteger.valueOf(Long.valueOf(grupoPorProducto.getGrupoProducto().getId())));
 				cotizacion.setGrupoPorProductoId(BigInteger.valueOf(Long.valueOf(grupoPorProducto.getId())));
 				cotizacion.setProducto(grupoPorProducto.getProducto());			
@@ -628,6 +628,15 @@
 		                    valorIva = Math.rint(Double.parseDouble(variable.getValor())*valorSubTotal/100*100)/100;
 		                    cotizacion.setImpIva(valorIva);
 		                }
+		        		if(variable.getNombre().equals("COMISION_BANCACOMUNAL")){
+		        			 cotizacion.setPorcentajeComision(Double.parseDouble(variable.getValor()));//%COMISION DE AGENTE
+		        		}
+		        		 	
+		        		if(variable.getNombre().equals("AGENTE_BANCACOMUNAL")){
+		        			cotizacion.setAgenteId(new BigInteger(variable.getValor()));//AGENTE AL QUE SE ATA
+		        			
+		        		}
+		        		
 		        	}
 		        	valorTotal = Math.rint((valorBase+valorIva)*100)/100;
 		            cotizacion.setTotalFactura(valorTotal);
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionAprobacionController.java
@@ -1238,6 +1238,10 @@
 							////////////////////////////////////////////////////////////////
 							else {
 								// / Actualiza estado tabla cotizacion
+								Estado nuevoAprodo = new Estado();
+								EstadoDAO estadoDAo = new EstadoDAO();
+								nuevoAprodo=estadoDAo.buscarPorNombre("Pendiente de Emitir","Cotizacion");
+								cotizacionC.setEstado(nuevoAprodo);
 								cotizacionC.setVigenciaDesde(VigenciaDesde);
 								cotizacionC = cotizacionTransaction.editar(cotizacionC);
 
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
@@ -327,7 +327,7 @@
 	private static AgriResultadoEmision generarXML(Cotizacion cotizacion){
 		AgriResultadoEmision resultado=new AgriResultadoEmision();
 		AgriSucreAuditoria agriSucreAuditoria = new AgriSucreAuditoria();
-		
+		try{
 		if(cotizacion.getAsegurado()==null)
 		{
 			resultado.setGeneradoXMLCorrectamente(false);
@@ -679,5 +679,18 @@
 		resultado.setGeneradoXMLCorrectamente(true);
 		resultado.setXmlEmision(xml.toString());
 		return resultado;
+		}
+		catch(Exception e){	
+			resultado.setMensaje("Error: "+e.getMessage());
+			agriSucreAuditoria.setCanal("EMISION");
+			agriSucreAuditoria.setTramite(cotizacion.getNumeroTramite());
+			agriSucreAuditoria.setObjeto("ERROR:"+e.getMessage());
+			Date fechaActual = new Date();
+			agriSucreAuditoria.setFecha(fechaActual);
+			agriSucreAuditoria.setEstado("Correcto");
+			AgriSucreAuditoriaTransaction agriSucreAuditoriaTransaction= new AgriSucreAuditoriaTransaction();
+			agriSucreAuditoriaTransaction.crear(agriSucreAuditoria);
+			return resultado;
+		}
 	}
 }
