diff --git a/WebContent/dashboard/ConsultaCanal.jsp b/WebContent/dashboard/ConsultaCanal.jsp
--- a/WebContent/dashboard/ConsultaCanal.jsp
+++ b/WebContent/dashboard/ConsultaCanal.jsp
@@ -44,7 +44,7 @@
 	 -->
 
 <script>
-function GetQueryStringByParameter(name) {
+function NEetQueryStringByParameter(name) {
     name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
     var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
     results = regex.exec(location.search);
diff --git a/build/classes/com/qbe/cotizador/servlets/producto/pymes/ObjetoPymesController.class b/build/classes/com/qbe/cotizador/servlets/producto/pymes/ObjetoPymesController.class
deleted file mode 100644
index cccbd34c31309b142ccfd5c109670d7c19576e9f..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/build/classes/com/qbe/cotizador/transaction/seguridad/VariableSistemaTransaction.class b/build/classes/com/qbe/cotizador/transaction/seguridad/VariableSistemaTransaction.class
index cdffd4e60e6c2549f0be8fbd4373c70160edf44a..b8a5ea1335a3dc771060f29e2b7f21cd21b1b3d3
GIT binary patch
literal 2674
zc$}q{T~``c6o%h}Ac~X5;72t{{YVUoij$~K6HRFR4hGbUQj<2Z15E8C17n9F%k&TR
zwz)BBU8^fsz35NsMbr1d2o|y8DlE=EoY`ley`R1Jfj|HL?RNlE_|6ZHz<kEasXwN5
zHDfu(Pg>TpRmaxy1uf$kR$eXWdqvyGYFRa<*@l)j^`ud7^qjU;Rr13t(Ed_;t*NG#
z-&5DqFZGNg(EPy28%|W9X(XHy@Ge+cJ%A>(D)6CM;Bwr^>ubeaTDP~PWr1Ma%4p{C
zN$#T8`N1d%EXM!8r?UdSjIC?7z}83|dpUY&*6yDTH>~N$6@hD##DSXEat2|<h``Xy
z1uO692TlO(Xl+5KK(ExAq2YaXyFdU{C#6oef=|&ygr;S^D((w}M&eb#NynyX`c=!E
z4qO!&EIV)#PR$W*=*4vfpUEuv()ymk9QF%Lo{lrCS!a`7oLdi|53O>zq2LqTtZ~%!
zs;;BA1cn>rD%~AcFe2S;=ANA4$fZ#QV{)m*woEgvWnKjkf$GPEKu7h!rGt#VFN0Qa
zyHs`igy$q3>XS%D_hV9^zp5WIO?^)@so?09y?#u)iFGreXNbgkb3);6UGT{_GJ=X4
zkFSYMpz-n&@D$lsH{<6fn5x0k$r6~ZbJlq&rY*rX?26Z6DqYg=2wW=hOlbRV&o=8>
z!_n*jhOnSu5lgJIJ>7|AOP4`R7R-u*$A}3i>0%+H*&CJ}%Q6$=BeBMTNIOpy%*n#*
zu6Z~w&1T8BMK=w$qHOx{3p9O7I?vMn3Q0dU|8>EY`%l3ZwgvpJHM6L%e@{Zv^;2Cc
zef(O%4xS3MorqQ7Vcnj-NbKJzNZ?y}a-F72oyEiw2qdkdoza&KnXLY^FU$#P7K32g
zAYWe2cz1L3mwrQ78kD}#cW8Obi3b6W0ZO2a$_httEGbc5q7=L*E|(365H)>Vi;2V$
z+Mm8dFxYX3t`F!<jQ@&j0!QfM>cCoL>=1(=Fcjx<NZ@DmtZ^2Wv%rkE*L#TZ2tQ-L
z@K6s_O!6j}!hJlz9am1d@^eNaot&gQpd%h!L6GkrbYK9T2&0SpyQ$qn{a!?I6$`kI
z72=k`L>WCDc7u_#FL00Hc&Kq7Gn50gI?I!qXrmJkxuc06AHL-1#Ut)f;r&Pln*0!c
z4EcEqW#l7T;jJujp|slk7q<(R_%X8;m)TAu%;pcVEcyI_QTcVXVT4hh7{NSS^a&A`
z<&-Or5za7^zzu2-5#TKX3o-a%jPj;d3GyCiQH*of1ox>d)!W!)+$l_#P(Cgd(M|>B
zP6cJEg0jy=IZBjqKK0VtG1SCqsB;&Bn!uV1b<>5qdmhvy3{kGncuREOW8)C1GT@M0
zdG_CM-<H@evuGk%#RigOTb5I<JZ2kZzQK4s<Pao-9#R-!++jYs%cy4=^CO14%;H?d
z68A1+n<e;+wqGzuRld6wzPlB^&ntXGF5fW!3_LIKU9IrlKFv3FA-*q4SHkW;$yI3q

diff --git a/src/com/qbe/cotizador/dao/seguridad/VariableSistemaDAO.java b/src/com/qbe/cotizador/dao/seguridad/VariableSistemaDAO.java
--- a/src/com/qbe/cotizador/dao/seguridad/VariableSistemaDAO.java
+++ b/src/com/qbe/cotizador/dao/seguridad/VariableSistemaDAO.java
@@ -1,5 +1,8 @@
 package com.qbe.cotizador.dao.seguridad;
 
+import java.math.BigInteger;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -11,5 +14,6 @@
 import javax.persistence.PersistenceContext;
 import javax.persistence.Query;
 import javax.persistence.StoredProcedureQuery;
+import javax.persistence.TypedQuery;
 
 import com.qbe.cotizador.entitymanagerfactory.EntityManagerFactoryDAO;
@@ -14,5 +18,6 @@
 
 import com.qbe.cotizador.entitymanagerfactory.EntityManagerFactoryDAO;
+import com.qbe.cotizador.model.AgriSucreAuditoria;
 import com.qbe.cotizador.model.TipoVariable;
 import com.qbe.cotizador.model.VariableSistema;
 
@@ -52,6 +57,14 @@
 		return variable;
 	}
 	
+	public VariableSistema buscarPorId2(int id){
+		VariableSistema variable = new VariableSistema();
+		List<VariableSistema> query = getEntityManager().createNamedQuery("VariableSistema.buscarPorId").setParameter("id", id).getResultList();
+		if(!query.isEmpty())
+			variable =  query.get(0);
+		return variable;
+	}
+	
 	public VariableSistema buscarPorNombre(String nombre){
 		VariableSistema variable = new VariableSistema();
 		List<VariableSistema> query = getEntityManager().createNamedQuery("VariableSistema.buscarPorNombre").setParameter("nombre", nombre).getResultList();
@@ -113,4 +126,55 @@
         Double valorIva = (Double)storedProcedure.getOutputParameterValue("valor_iva_retorno");        		
 		return valorIva;						
 	}
+	
+	public List<VariableSistema> buscarVariableK( String nombre, int Skip, int Take){ 
+				
+		BigInteger cotiID;
+				
+		List<VariableSistema> results = new ArrayList<VariableSistema>();
+		TypedQuery<VariableSistema> query = null;
+		
+		String stringQuery= "SELECT c FROM VariableSistema c ";					
+		
+		String valoresWhereQuery="";
+		
+		if(nombre.length()>0)
+			valoresWhereQuery = " where c.nombre = :nombre";
+		
+		stringQuery = stringQuery+valoresWhereQuery;
+		
+		query = getEntityManager().createQuery(stringQuery, VariableSistema.class);
+		
+		if(nombre.length()>0)
+			query.setParameter("nombre", nombre);
+		
+		results = query.setMaxResults(Take).setFirstResult(Skip).getResultList();
+		return results;
+	}
+	
+	public long buscarVarNum(String nombre, int Skip, int Take){ 
+
+				
+		Query query = null;
+		
+				
+		String stringQuery= "SELECT count(c.id) FROM VariableSistema c ";					
+		
+		String valoresWhereQuery="";
+		
+		if(nombre.length()>0)
+			valoresWhereQuery = " where c.nombre = :nombre";
+		
+		stringQuery = stringQuery+valoresWhereQuery;
+		
+		query = getEntityManager().createQuery(stringQuery);
+		
+
+		if(nombre.length()>0)
+			query.setParameter("nombre", nombre);
+	
+		long results = (long)query.getSingleResult();
+		return results;
+	}
+	
 }
diff --git a/src/com/qbe/cotizador/model/AgriCotizacionAprobacion.java b/src/com/qbe/cotizador/model/AgriCotizacionAprobacion.java
--- a/src/com/qbe/cotizador/model/AgriCotizacionAprobacion.java
+++ b/src/com/qbe/cotizador/model/AgriCotizacionAprobacion.java
@@ -203,4 +203,7 @@
 	
 	@Column(name = "USUARIO_COTIZADOR")
 	private String usuarioCotizador;
+		
+	@Column(name = "ciclo_id")
+	private String cicloId;
 	
@@ -206,4 +209,23 @@
 	
+	@Column(name = "cliente_id")
+	private String clienteId;
+		
+	public String getClienteId() {
+		return clienteId;
+	}
+
+	public void setClienteId(String clienteId) {
+		this.clienteId = clienteId;
+	}
+
+	public String getCicloId() {
+		return cicloId;
+	}
+
+	public void setCicloId(String cicloId) {
+		this.cicloId = cicloId;
+	}
+
 	public String getUsuarioCotizador() {
 		return usuarioCotizador;
 	}
diff --git a/src/com/qbe/cotizador/model/AgriParroquia.java b/src/com/qbe/cotizador/model/AgriParroquia.java
--- a/src/com/qbe/cotizador/model/AgriParroquia.java
+++ b/src/com/qbe/cotizador/model/AgriParroquia.java
@@ -15,7 +15,9 @@
 	@NamedQuery(name="AgriParroquia.buscarTodos", query="SELECT a FROM AgriParroquia a"),
 	@NamedQuery(name="AgriParroquia.obtenerPorSBS", query="SELECT a FROM AgriParroquia a where a.parroquiaSbs=:CodigoSBS"),
 	@NamedQuery(name="AgriParroquia.obtenerPorNombre", query="SELECT a FROM AgriParroquia a where a.parroquiaNombre=:nombre"),
-	@NamedQuery(name="AgriParroquia.obtenerPorNombreYCanton", query="SELECT a FROM AgriParroquia a where a.parroquiaNombre LIKE :nombre AND a.cantonId=:canton")
+	@NamedQuery(name="AgriParroquia.obtenerPorNombreYCanton", query="SELECT a FROM AgriParroquia a where a.parroquiaNombre LIKE :nombre AND a.cantonId=:canton"),
+	@NamedQuery(name="AgriParroquia.obtenerPorId", query="SELECT a FROM AgriParroquia a where a.id=:id"),
+	@NamedQuery(name="AgriParroquia.obtenerPorCanton", query="SELECT a FROM AgriParroquia a where a.cantonId=:canton")
 })
 
 public class AgriParroquia implements Serializable {
diff --git a/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java b/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
--- a/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
+++ b/src/com/qbe/cotizador/servicios/QBE/bancaComunal/EndpointQBEAgricola.java
@@ -73,6 +73,7 @@
 import com.qbe.cotizador.model.TipoIdentificacion;
 import com.qbe.cotizador.model.TipoVariable;
 import com.qbe.cotizador.model.VariableSistema;
+import com.qbe.cotizador.servlets.producto.agricola.AgriCotizacionDetalleProcesos;
 import com.qbe.cotizador.servlets.producto.agricola.AgriSucreNotificacionErrores;
 import com.qbe.cotizador.transaction.cotizacion.CotizacionDetalleTransaction;
 import com.qbe.cotizador.transaction.cotizacion.CotizacionTransaction;
@@ -782,6 +783,11 @@
 					agriAuditoriaCotizacionTransaction.crear(agriAuditoriaCotizacion);
 				}
 				
+				/**PROCESO DE CREACION DEL DETALLE DE LA COTIZACION ENDOSO***/
+				AgriCotizacionDetalleProcesos agriCotizacionDetalleProcesos = new AgriCotizacionDetalleProcesos();
+				agriCotizacionDetalleProcesos.creardetalleCotizacion(cotizacion, "Registro Solicitud");
+				/**FIN DE REGISTRO DE ENDOSO**/
+				
 				try{
 					auditoria.setObjeto(variableControl);
 					auditoria.setEstado(EstadoAuditoria);
@@ -1062,6 +1068,13 @@
 					}
 					variableControl=variableControl+" || ValorMonetario "+valorMonetario+" || fechaDesembolso "+fechaDesembolso+" || setNumeroOperacion "+in0.getNumeroOperacion();
 					AgriProcesos.editar(agriObjetoCotizacion);
+					
+					/**PROCESO DE CREACION DEL DETALLE DE LA COTIZACION ENDOSO***/
+					AgriCotizacionDetalleProcesos agriCotizacionDetalleProcesos = new AgriCotizacionDetalleProcesos();
+					agriCotizacionDetalleProcesos.creardetalleCotizacion(existeCotizacion, "confirmacion Emision");
+					/**FIN DE REGISTRO DE ENDOSO**/
+					
+					
 					mensaje="0";
 					try{
 						auditoria.setTramite(in0.getNumeroResolucion());
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriCotizacionReporte.java
@@ -345,7 +345,7 @@
 		//Numero de contenedor
 		
 		//Armado Final de parametros a mostrar en la poliza
-		parametersHeader.put("NumeroPoliza", agriParametroXCanal.getContenedorEnsuranceId()+"-"+detalleCotizacion.getId().toString());
+		parametersHeader.put("NumeroPoliza", agriParametroXCanal.getContenedorNumero()+"-"+detalleCotizacion.getId().toString());
 		//buscamos el cliente
 		Cliente cliente = new Cliente();
 		ClienteDAO clienteDAO = new ClienteDAO();
