package com.qbe.cotizador.servlets.producto.agricola;

import java.math.BigInteger;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import com.qbe.cotizador.dao.cotizacion.CotizacionDAO;
import com.qbe.cotizador.dao.cotizacion.CotizacionDetalleDAO;
import com.qbe.cotizador.dao.cotizacion.EndosoBeneficiarioDAO;
import com.qbe.cotizador.dao.cotizacion.EstadoDAO;
import com.qbe.cotizador.dao.cotizacion.ProductoXPuntoVentaDAO;
import com.qbe.cotizador.dao.entidad.AgenteDAO;
import com.qbe.cotizador.dao.entidad.BeneficiarioDAO;
import com.qbe.cotizador.dao.entidad.CantonDAO;
import com.qbe.cotizador.dao.entidad.CiudadDAO;
import com.qbe.cotizador.dao.entidad.ClienteDAO;
import com.qbe.cotizador.dao.entidad.EntidadDAO;
import com.qbe.cotizador.dao.entidad.PuntoVentaDAO;
import com.qbe.cotizador.dao.entidad.TipoDireccionDAO;
import com.qbe.cotizador.dao.entidad.ZonaDAO;
import com.qbe.cotizador.dao.producto.agricola.AgriCanalDAO;
import com.qbe.cotizador.dao.producto.agricola.AgriObjetoCotizacionDAO;
import com.qbe.cotizador.dao.producto.agricola.AgriParametroXCanalDAO;
import com.qbe.cotizador.dao.producto.agricola.AgriParametroXPuntoVentaDAO;
import com.qbe.cotizador.dao.producto.agricola.AgriTipoCultivoDAO;
import com.qbe.cotizador.model.Agente;
import com.qbe.cotizador.model.AgriCanal;
import com.qbe.cotizador.model.AgriObjetoCotizacion;
import com.qbe.cotizador.model.AgriParametroXCanal;
import com.qbe.cotizador.model.AgriParametroXPuntoVenta;
import com.qbe.cotizador.model.AgriTipoCultivo;
import com.qbe.cotizador.model.Beneficiario;
import com.qbe.cotizador.model.Canton;
import com.qbe.cotizador.model.Ciudad;
import com.qbe.cotizador.model.Cliente;
import com.qbe.cotizador.model.Cotizacion;
import com.qbe.cotizador.model.CotizacionDetalle;
import com.qbe.cotizador.model.CotizacionRespuesta;
import com.qbe.cotizador.model.Direccion;
import com.qbe.cotizador.model.EndosoBeneficiario;
import com.qbe.cotizador.model.Entidad;
import com.qbe.cotizador.model.Estado;
import com.qbe.cotizador.model.ProductoXPuntoVenta;
import com.qbe.cotizador.model.PuntoVenta;
import com.qbe.cotizador.model.TipoDireccion;
import com.qbe.cotizador.model.Zona;
import com.qbe.cotizador.transaction.cotizacion.CotizacionRespuestaTransaction;
import com.qbe.cotizador.transaction.cotizacion.CotizacionTransaction;
import com.qbe.cotizador.transaction.cotizacion.EndosoBeneficiarioTransaction;
import com.qbe.cotizador.transaction.entidad.DireccionTransaction;

public class AgriEmisionPoliza {
	public static AgriResultadoEmision emitirPoliza(String cotizacionId){
		CotizacionDAO cotizacionDAO=new CotizacionDAO(); 
		Cotizacion cotizacion=cotizacionDAO.buscarPorId(cotizacionId);

		// Actualizar las direcciones de la entidad cliente
		ClienteDAO clienteDAO = new ClienteDAO();
		Cliente cliente = clienteDAO.buscarPorId(cotizacion.getClienteId().toString());

		if (cotizacion.getAsegurado().getDireccions().size()==0 ) {
			AgriObjetoCotizacionDAO objCotDAO = new AgriObjetoCotizacionDAO();
			AgriObjetoCotizacion objetoCot = new AgriObjetoCotizacion();
			// if (!cotizacionId.equals(""))
			List<CotizacionDetalle> detalle = cotizacion.getCotizacionDetalles();
			objetoCot = objCotDAO.buscarPorId(new BigInteger(detalle.get(0).getObjetoId()));
			CantonDAO cantDAO = new CantonDAO();
			Canton canton = cantDAO.buscarPorId(objetoCot.getCantonId().toString());
			CiudadDAO ciuDAO = new CiudadDAO();
			Ciudad ciu = ciuDAO.buscarPorNombre(canton.getNombre());
			if (ciu==null){
				//ProvinciaDAO provDAO = new ProvinciaDAO();
				//Provincia prov = provDAO.buscarPorId(canton.getProvincia().getId());
				ciu = ciuDAO.buscarPorId(canton.getProvincia().getCapitalId());
			}
			TipoDireccionDAO tipoDirecDAO = new TipoDireccionDAO();
			ZonaDAO zonaDAO = new ZonaDAO();
			// Por defecto Tipo de direccion (cobro)
			TipoDireccion tipoDirec = tipoDirecDAO.buscarPorId("3");
			// Por defecto zona rural
			Zona zona = zonaDAO.buscarPorId("2");
			DireccionTransaction direcTransaccion = new DireccionTransaction();
			Direccion nuevaDireccion = new Direccion();
			nuevaDireccion.setCiudad(ciu);
			nuevaDireccion.setEntidad(cliente.getEntidad());
			nuevaDireccion.setTipoDireccion(tipoDirec);
			nuevaDireccion.setZona(zona);
			nuevaDireccion.setCallePrincipal(objetoCot.getDireccionSiembra());
			nuevaDireccion.setNumero("S/N");
			nuevaDireccion.setEsCobro(true);
			nuevaDireccion.setCalleSecundaria(objetoCot.getDireccionSiembra());
			nuevaDireccion = direcTransaccion.crear(nuevaDireccion);
			// }
		}
		else if (cliente.getEntidad().getDireccions().size() == 0 ){
			AgriObjetoCotizacionDAO objCotDAO = new AgriObjetoCotizacionDAO();
			AgriObjetoCotizacion objetoCot = new AgriObjetoCotizacion();
			// if (!cotizacionId.equals(""))
			List<CotizacionDetalle> detalle = cotizacion.getCotizacionDetalles();
			objetoCot = objCotDAO.buscarPorId(new BigInteger(detalle.get(0).getObjetoId()));
			CantonDAO cantDAO = new CantonDAO();
			Canton canton = cantDAO.buscarPorId(objetoCot.getCantonId().toString());
			CiudadDAO ciuDAO = new CiudadDAO();
			Ciudad ciu = ciuDAO.buscarPorNombre(canton.getNombre());
			if (ciu==null){
				//ProvinciaDAO provDAO = new ProvinciaDAO();
				//Provincia prov = provDAO.buscarPorId(canton.getProvincia().getId());
				ciu = ciuDAO.buscarPorId(canton.getProvincia().getCapitalId());
			}
			TipoDireccionDAO tipoDirecDAO = new TipoDireccionDAO();
			ZonaDAO zonaDAO = new ZonaDAO();
			// Por defecto Tipo de direccion (cobro)
			TipoDireccion tipoDirec = tipoDirecDAO.buscarPorId("3");
			// Por defecto zona rural
			Zona zona = zonaDAO.buscarPorId("2");
			DireccionTransaction direcTransaccion = new DireccionTransaction();
			Direccion nuevaDireccion = new Direccion();
			nuevaDireccion.setCiudad(ciu);
			nuevaDireccion.setEntidad(cliente.getEntidad());
			nuevaDireccion.setTipoDireccion(tipoDirec);
			nuevaDireccion.setZona(zona);
			nuevaDireccion.setCallePrincipal(objetoCot.getDireccionSiembra());
			nuevaDireccion.setNumero("S/N");
			nuevaDireccion.setEsCobro(true);
			nuevaDireccion.setCalleSecundaria(objetoCot.getDireccionSiembra());
			nuevaDireccion = direcTransaccion.crear(nuevaDireccion);
		}
		
		//Creo la entidad en ensurance y actualizo el id en la entidad del cotizador
		/*String resultadoCrearEntidad=crearActualizarEntidad(cotizacion.getAsegurado());
		if(!resultadoCrearEntidad.equals("")){
			Entidad entidad=cotizacion.getAsegurado();
			entidad.setEntEnsurance(resultadoCrearEntidad);
			EntidadTransaction entidadTrans=new EntidadTransaction();
			entidadTrans.editar(entidad);
		}*/
		
			
		AgriResultadoEmision nuevoResultado=new AgriResultadoEmision();
		if(cotizacion.getId()!=null){
			
			//Ensamblo el xml para el envió a generrar la póliza
			nuevoResultado=generarXML(cotizacion);
			if(nuevoResultado.isGeneradoXMLCorrectamente())
			{
				try{
					com.qbe.cotizador.servicios.QBE.emisionAgricolaWS.WSEmisionAgricolaProxy emisionAgricola=new com.qbe.cotizador.servicios.QBE.emisionAgricolaWS.WSEmisionAgricolaProxy();
					String resultado=emisionAgricola.emisionPoliza(nuevoResultado.getXmlEmision(), "f2rtiUdv2kjOgaCx");
					if(!resultado.equals("")){
						if (!resultado.contains("ERROR")){
						CotizacionTransaction cotizacionTransaction = new CotizacionTransaction();
						//String[] ids=resultado.split(" ");
						String[] ids=resultado.split(" ");
						if(ids.length!=0){
							//String[] ids2=ids[1].split("::");
							String[] ids2=ids[12].split("::");
							if(ids2.length!=0){
								CotizacionRespuesta cotizacionRes = new CotizacionRespuesta();
								CotizacionRespuestaTransaction cotiResTransaction = new CotizacionRespuestaTransaction();
								EstadoDAO estadoDAO = new EstadoDAO();
								Estado estado = estadoDAO.buscarPorNombre("Emitido", "Cotizacion");
								if (!cotizacion.getEstado().getNombre().equals(estado.getId())){
									cotizacion.setNumeroFactura(ids2[0].trim());
									nuevoResultado.setFactura(ids2[0].trim());
									cotizacion.setEstado(estado);
									///TODO:tualiza estado tabla cotizacion
									cotizacion = cotizacionTransaction.editar(cotizacion);
									//TODO: Se graba en cotizacion respuesta 
									cotizacionRes.setCotizacionId(new BigInteger(cotizacion.getId()));
									cotizacionRes.setPolizaId(cotizacion.getNumeroFactura());
									cotizacionRes.setFacturaNumero(cotizacion.getNumeroFactura());
									cotizacionRes.setFechaEmision(ids2[1].trim());
									cotizacionRes = cotiResTransaction.crear(cotizacionRes);
									
									nuevoResultado.setEmitidoCorrectamente(true);
									return nuevoResultado;
								}
								else {
									nuevoResultado.setEmitidoCorrectamente(false);
									nuevoResultado.setMensaje("La cotización fue emitida anteriormente");
									return nuevoResultado;
								}
							}
						}
						}
						else {
							nuevoResultado.setEmitidoCorrectamente(false);
							nuevoResultado.setMensaje("Error en el proceso de emisión de Ensurance. "+resultado);
							return nuevoResultado;
						}
					}
					else{
						nuevoResultado.setEmitidoCorrectamente(false);
						nuevoResultado.setMensaje("Error en el proceso de emisión de Ensurance");
						return nuevoResultado;
					}
						
				}
				catch(Exception ex){
					ex.printStackTrace();
					nuevoResultado.setEmitidoCorrectamente(false);
					nuevoResultado.setMensaje("Error en el proceso de emisión de Ensurance");
					return nuevoResultado;
				}
			}
			else
				return nuevoResultado;
		}
		else
		{
			nuevoResultado.setEmitidoCorrectamente(false);
			nuevoResultado.setMensaje("No existe una cotización con ese numero");
			return nuevoResultado;
		}
		return nuevoResultado;
	}

/*	private static String crearActualizarEntidad(Entidad entidad){
		String ciudad="";
		String direccion="";
		String provincia="";
		if(entidad.getDireccions().size()!=0){
			if (entidad.getDireccions().get(0).getCiudad()!=null){
				ciudad=entidad.getDireccions().get(0).getCiudad().getId();
				provincia=entidad.getDireccions().get(0).getCiudad().getProvincia().getId();
			}
		}
		if(entidad.getDireccions().size()!=0)
			direccion=entidad.getDireccions().get(0).getCallePrincipal();

		Date fecha=new Date();
		com.qbe.ensurance.services.WSActualizarCrearEntidadesONBASE.WSActualizarCrearEntidadesONBASEProxy wsEntidadEnsurance=new WSActualizarCrearEntidadesONBASEProxy();
		EntidadWSONBASE entidadEnsurance=new EntidadWSONBASE();
		entidadEnsurance.setActividadEconomica("-1");
		entidadEnsurance.setApellido(entidad.getApellidos());
		entidadEnsurance.setApellidoRepresentanteLegal(entidad.getApellidos());
		entidadEnsurance.setCiudad(ciudad);
		entidadEnsurance.setConoceTuCliente("");
		entidadEnsurance.setEmailPrincipal(entidad.getMail());
		entidadEnsurance.setEntidadId("");
		entidadEnsurance.setEstadoCivilId("29");
		entidadEnsurance.setFechaActualiza(fecha.toLocaleString());
		entidadEnsurance.setFechaConstitucion(null);
		entidadEnsurance.setFechaNacimiento(null);
		entidadEnsurance.setGenero("M");
		entidadEnsurance.setIdentificacion(entidad.getIdentificacion());
		entidadEnsurance.setNombre(entidad.getNombres());
		entidadEnsurance.setNombrecompleto(entidad.getNombreCompleto());
		entidadEnsurance.setNombreDireccion(direccion);
		entidadEnsurance.setNombreRepresentanteLegal(entidad.getNombres());
		entidadEnsurance.setPais("6815744");
		entidadEnsurance.setProvincia(provincia);
		entidadEnsurance.setTelefonoCelular1(entidad.getCelular());
		entidadEnsurance.setTelefonoConvencional(entidad.getTelefono());
		entidadEnsurance.setTelefonoOtro(null);
		entidadEnsurance.setTipoEmpleado(null);
		entidadEnsurance.setTitulo("");
		
		entidadEnsurance.setPuerto("8084");
		entidadEnsurance.setUsuario("dchaguaro");
		entidadEnsurance.setPassword("pruebas");
		
		String result="";
		try
		{
			result=wsEntidadEnsurance.crearActualizarEntidad(entidadEnsurance);
		}
		catch(Exception ex){
		}
		
		return result;
	}*/
	
	private static AgriResultadoEmision generarXML(Cotizacion cotizacion){
		AgriResultadoEmision resultado=new AgriResultadoEmision();
		if(cotizacion.getAsegurado()==null)
		{
			resultado.setGeneradoXMLCorrectamente(false);
			resultado.setMensaje("La cotización no tiene un asegurado");
			return resultado;
		}
		ClienteDAO clienteDAO=new ClienteDAO();
		AgenteDAO agenteDAO=new AgenteDAO();
		AgriParametroXPuntoVentaDAO parametroDAO=new AgriParametroXPuntoVentaDAO();
		PuntoVentaDAO puntoVentaDAO=new PuntoVentaDAO();
		ProductoXPuntoVentaDAO productoXPVDAO=new ProductoXPuntoVentaDAO();
		AgriObjetoCotizacionDAO objetoCotizacionDAO=new AgriObjetoCotizacionDAO();
		AgriTipoCultivoDAO tipoCultivoDAO=new AgriTipoCultivoDAO();
		EntidadDAO entidadDAO=new EntidadDAO();
		EndosoBeneficiarioDAO endosoBeneficiarioDAO=new EndosoBeneficiarioDAO();

		Agente agente=agenteDAO.buscarPorId(cotizacion.getAgenteId().toString());
		AgriParametroXPuntoVenta parametroXPV=parametroDAO.buscarPorPuntoVentaId(new BigInteger(cotizacion.getPuntoVenta().getId()));
		PuntoVenta puntoVenta=puntoVentaDAO.buscarPorId(cotizacion.getPuntoVenta().getId());
		ProductoXPuntoVenta productoXPV=productoXPVDAO.buscarPorId(cotizacion.getProductoXPuntoVentaId().toString());
		CotizacionDetalle cotizacionDetalle = new CotizacionDetalle();
		CotizacionDetalleDAO cotizacionDetalleDAO= new CotizacionDetalleDAO();
		cotizacionDetalle=cotizacionDetalleDAO.buscarCotizacionDetallePorCotizacion(cotizacion).get(0);
		AgriObjetoCotizacion objetoCotizacion=objetoCotizacionDAO.buscarPorId(new BigInteger(cotizacionDetalle.getObjetoId()));
		AgriTipoCultivo tipoCultivo=tipoCultivoDAO.BuscarPorId(objetoCotizacion.getTipoCultivoId());
		Cliente cliente=clienteDAO.buscarPorId(cotizacion.getClienteId().toString());
		
		
		
		//Valido que existe un tipo de cultivo
		if(tipoCultivo.getTipoCultivoId()==null){
			resultado.setGeneradoXMLCorrectamente(false);
			resultado.setMensaje("No existe el tipo de cultivo indicado en la cotización");
			return resultado;
		}
		else{
			if(tipoCultivo.getCodEnsurance().equals("") || tipoCultivo.getCodEnsurance()==null){
				resultado.setGeneradoXMLCorrectamente(false);
				resultado.setMensaje("El tipo de cultivo no tiene un código válido en Ensurance");
				return resultado;
			}
		}
		
		//Determino la plantilla
		String plantillaId="";
		String contenedorId="";
		if(parametroXPV.getCanalId()!=null)
		{
			AgriCanalDAO agriCanalDAO=new AgriCanalDAO();
			AgriCanal agriCanal=agriCanalDAO.BuscarPorId(parametroXPV.getCanalId());
//			if(agriCanal.getNombre().equals("DIRECTOS")){
//				//contenedorId="";
//				//TODO: En la ultima reunion se quedo que en directos si iba a tener un contenedor
//				contenedorId=parametroXPV.getContenedorEnsuranceId();
//			}
//			else{
//				contenedorId=parametroXPV.getContenedorEnsuranceId();
//			}
				
			
			AgriParametroXCanalDAO apcDAO=new AgriParametroXCanalDAO();
			
			AgriParametroXCanal parametroXCanal = apcDAO.obtenerPorCanalTipoCultivo(parametroXPV.getPuntoVentaId(), tipoCultivo.getTipoCultivoId());
			if(parametroXCanal.getParametroCanalId()!=null){
				if(parametroXCanal.getPlantillaId()!=null){
					plantillaId=parametroXCanal.getPlantillaId();
					contenedorId=parametroXCanal.getContenedorEnsuranceId();
				}
				else{
					resultado.setGeneradoXMLCorrectamente(false);
					resultado.setMensaje("No existe configurado una plantilla para este canal.");
					return resultado;
				}
					
			}
			else{
				resultado.setGeneradoXMLCorrectamente(false);
				resultado.setMensaje("No existe la configuración de paramateros para este canal.");
				return resultado;
			}
				
		}
		else{
			resultado.setGeneradoXMLCorrectamente(false);
			resultado.setMensaje("No existe la configuración de paramateros para este canal.");
			return resultado;
		}
		
		EndosoBeneficiario endosoBeneficiario= endosoBeneficiarioDAO.buscarPorCotizacion(cotizacion);
		if(endosoBeneficiario!=null){
			if (endosoBeneficiario.getId()==null){
				//TODO:COntrolar que el ensodoso beneficiario se cree solo para banca comunal y credife 
				EndosoBeneficiarioTransaction endosoBeneficiarioTransaction = new EndosoBeneficiarioTransaction();
				BeneficiarioDAO beneficiarioDAO = new BeneficiarioDAO();
				Beneficiario beneficiario = beneficiarioDAO.buscarPorId(parametroXPV.getBeneficiarioId());
				endosoBeneficiario.setBeneficiario(beneficiario);
				endosoBeneficiario.setCotizacion(cotizacion);
				endosoBeneficiario.setMonto(cotizacion.getSumaAseguradaTotal());
				endosoBeneficiario=endosoBeneficiarioTransaction.crear(endosoBeneficiario);
			}
		}

		Calendar c = Calendar.getInstance(); 
		c.setTime(objetoCotizacion.getFechaSiembra()); 
		c.add(Calendar.DATE, tipoCultivo.getVigenciaDias());
		Date vigenciaHasta = c.getTime();
		
		Calendar cPol = Calendar.getInstance(); 
		cPol.setTime(cotizacion.getVigenciaDesde()); 
		cPol.add(Calendar.DATE, tipoCultivo.getVigenciaDias());
		Date vigenciaPolHasta = cPol.getTime();
		
		
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		
		String fechaInicioCultivo = df.format(objetoCotizacion.getFechaSiembra());
		
		String fechaFinalCultivo = df.format(vigenciaHasta);
		
		long fechaInicioPoliza = cotizacion.getVigenciaDesde().getTime();
		
		long fechaFinalPoliza = vigenciaPolHasta.getTime();
		/*Date fechaAprobacion=new Date();
		SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
		try{
			fechaAprobacion=dateFormat.parse(fechaInicioVigencia);
		} catch (ParseException e) {
			e.printStackTrace();
			.append("<puerto>8084</puerto>")
		}*/
		StringBuilder xml=new StringBuilder("<superObjetoXML><detallesPoliza><identificador>").append(cotizacion.getId()).append("</identificador>")
		.append("<login>SMARTWORK</login>")
		.append("<pass>5sMCNw4JQhUyIENa</pass>")
		.append("<agenteId>").append(agente.getAgeEnsurance()).append("</agenteId>")
		.append("<porcentajeComision>").append(cotizacion.getPorcentajeComision()).append("</porcentajeComision>")
		.append("<valorprima>").append(cotizacion.getPrimaNetaTotal()).append("</valorprima>")
		.append("<canalId>26346</canalId>")
		.append("<contenedorId>").append("6253472317840").append("</contenedorId>")
		.append("<loteImpresion>LOTE Credifé_2015-07-02</loteImpresion>")
		.append("<puntoVentaId>")
		.append(puntoVenta.getPtoEnsurance())
		.append("</puntoVentaId>")
		.append("<tipoRiesgoId>8126480</tipoRiesgoId>")
		.append("<claseRiesgoId>8060943</claseRiesgoId>")
		.append("<tipoItemId>102</tipoItemId>")
		.append("<monedaId>11141120</monedaId>")
		.append("<plantillaId>").append(plantillaId).append("</plantillaId>")
		.append("<firmaDigitalId>1</firmaDigitalId>")
		.append("<usuarioActualiza>5829986617978</usuarioActualiza>")
		.append("<ramoId>7274513</ramoId>")
		.append("<mnemotecnicoRamo>SA</mnemotecnicoRamo>")
		.append("<unidadNegocioId>").append(productoXPV.getUnidadNegocio().getUnEnsurance()).append("</unidadNegocioId>")
		.append("<unidadProduccionId>").append(productoXPV.getUnidadProduccion().getUpEnsurance()).append("</unidadProduccionId>")
		.append("<numeroPoliza>").append(cotizacion.getId()).append("</numeroPoliza>")
		.append("<codigoEntidadFinanciera>26346</codigoEntidadFinanciera>")
		.append("<fechaAprobacion>").append("06/11/2015").append("</fechaAprobacion>")
		//.append("<fechaAprobacion>").append(dateFormat.format(fechaAprobacion)).append("</fechaAprobacion>")
		.append("<codigoIntegracion>998000008</codigoIntegracion>")
		.append("<vigenciaDesde>").append(fechaInicioPoliza).append("</vigenciaDesde>")
		.append("<valorAsegurado>").append(cotizacion.getSumaAseguradaTotal()).append("</valorAsegurado>")
		.append("<vigenciaHasta>").append(fechaFinalPoliza).append("</vigenciaHasta>")
		.append("<sucursalId>").append(parametroXPV.getSucursalEmisionId()).append("</sucursalId>")
		.append("</detallesPoliza>")
		.append("<loteCultivo>")
		.append("<loteCultivoId>-1</loteCultivoId>")
		.append("<nombre>LOTE CREDIFE_2015-07-02</nombre>")
		.append("<valorAsegurado>").append(cotizacion.getSumaAseguradaTotal()).append("</valorAsegurado>")
		.append("<numeroHectareas>").append(objetoCotizacion.getHectareasLote()).append("</numeroHectareas>")
		.append("<valorPorHectarea>").append(objetoCotizacion.getCostoProduccion()).append("</valorPorHectarea>")
		.append("<gpsLoteX>0</gpsLoteX>")
		.append("<gpsLoteY>0</gpsLoteY>")
		.append("<tasa>").append(cotizacion.getTasaProductoValor()).append("</tasa>")
		.append("<tipoCultivoId>").append(tipoCultivo.getCodEnsurance()).append("</tipoCultivoId>")
		.append("<diasVigencia>").append(tipoCultivo.getVigenciaDias()).append("</diasVigencia>")
		.append("<inicioVigenciaCultivo>").append(fechaInicioCultivo).append("</inicioVigenciaCultivo>")
		.append("<finVigenciaCultivo>").append(fechaFinalCultivo).append("</finVigenciaCultivo>")
		//.append("<inicioVigenciaCultivo>").append("06/11/2015").append("</inicioVigenciaCultivo>")
		//.append("<finVigenciaCultivo>").append("06/02/2016").append("</finVigenciaCultivo>")
		.append("<variedad>DE VERANO</variedad>")
		.append("<numeroHectareasAsegurables>").append(objetoCotizacion.getHectareasAsegurables()).append("</numeroHectareasAsegurables>")
		.append("<esTecnificado>Si</esTecnificado>")
		//.append("<fechaTentativaSiembra>").append("06/11/2015").append("</fechaTentativaSiembra>")
		.append("<fechaTentativaSiembra>").append(objetoCotizacion.getFechaSiembra()).append("</fechaTentativaSiembra>")
		.append("<propiedadId>-1</propiedadId>")
		.append("</loteCultivo>")

		.append("<cliente>")
		.append("<id>no</id>")
		.append("<entidadId>").append(cliente.getEntidad().getEntEnsurance()).append("</entidadId>")
		.append("<nombres>").append(cliente.getEntidad().getNombres()).append("</nombres>")
		.append("<apellidos>").append(cliente.getEntidad().getApellidos()).append("</apellidos>")
		.append("<tipoIdentificacion>")
		.append(cliente.getEntidad().getTipoIdentificacion().getId()=="1" ? "c":cliente.getEntidad().getTipoIdentificacion().getId()=="2" ? "p":"r")
		.append("</tipoIdentificacion>")
		.append("<tipoEntidadId>").append(cliente.getEntidad().getTipoEntidad().getId()).append("</tipoEntidadId>")
		.append("<identificacion>").append(cliente.getEntidad().getIdentificacion()).append("</identificacion>")
		.append("<genero>f</genero>")
		.append("<esEmpresa>")
		.append(cliente.getEntidad().getTipoIdentificacion().getId()=="1" ? "false":cliente.getEntidad().getTipoIdentificacion().getId()=="2" ? "false":"true")
		.append("</esEmpresa>")
		.append("<DireccionDTO><direccion>")
		.append("<paisId>6815744</paisId>")
		.append("<provinciaId>").append(cliente.getEntidad().getDireccions().get(0).getCiudad().getProvincia().getCodigoSbs()).append("</provinciaId>")
		.append("<ciudadId>").append(cliente.getEntidad().getDireccions().get(0).getCiudad().getId()).append("</ciudadId>");
		if(cliente.getEntidad().getDireccions().get(0).getParroquia()!=null){
			xml.append("<cantonId>").append(cliente.getEntidad().getDireccions().get(0).getParroquia().getCanton().getId()).append("</cantonId>")
			.append("<parroquiaId>").append(cliente.getEntidad().getDireccions().get(0).getParroquia().getId()).append("</parroquiaId>");
		}
		else{
			xml.append("<cantonId>").append("1201").append("</cantonId>")
			.append("<parroquiaId>").append("120153").append("</parroquiaId>");
		}
		xml.append("<direccion>")
		.append(cliente.getEntidad().getDireccions().get(0).getCallePrincipal())
		.append(" ")
		.append(cliente.getEntidad().getDireccions().get(0).getNumero())
		.append(" ")
		.append(cliente.getEntidad().getDireccions().get(0).getCalleSecundaria())
		.append("</direccion>")
		.append("<telefono>").append(cliente.getEntidad().getTelefono()).append("</telefono>")
		.append("</direccion></DireccionDTO>")
		.append("</cliente>")

		.append("<asegurado>")
		.append("<id>no</id>")
		.append("<entidadId>").append(cotizacion.getAsegurado().getEntEnsurance()).append("</entidadId>")
		.append("<nombres>").append(cotizacion.getAsegurado().getNombres()).append("</nombres>")
		.append("<apellidos>").append(cotizacion.getAsegurado().getApellidos()).append("</apellidos>")
		.append("<tipoIdentificacion>")
		.append(cotizacion.getAsegurado().getTipoIdentificacion().getId()=="1" ? "c":cliente.getEntidad().getTipoIdentificacion().getId()=="2" ? "p":"r")
		.append("</tipoIdentificacion>")
		.append("<tipoEntidadId>").append(cotizacion.getAsegurado().getTipoEntidad().getId()).append("</tipoEntidadId>")
		.append("<identificacion>").append(cotizacion.getAsegurado().getIdentificacion()).append("</identificacion>")
		.append("<genero>f</genero>")
		.append("<esEmpresa>")
		.append(cotizacion.getAsegurado().getTipoIdentificacion().getId()=="1" ? "false":cotizacion.getAsegurado().getTipoIdentificacion().getId()=="2" ? "false":"true")
		.append("</esEmpresa>")
		.append("<DireccionDTO><direccion>")
		.append("<paisId>6815744</paisId>")
		.append("<provinciaId>").append(cotizacion.getAsegurado().getDireccions().get(0).getCiudad().getProvincia().getCodigoSbs()).append("</provinciaId>")
		.append("<ciudadId>").append(cotizacion.getAsegurado().getDireccions().get(0).getCiudad().getId()).append("</ciudadId>");
		if(cotizacion.getAsegurado().getDireccions().get(0).getParroquia()!=null){
			xml.append("<cantonId>").append(cotizacion.getAsegurado().getDireccions().get(0).getParroquia().getCanton().getId()).append("</cantonId>")
			.append("<parroquiaId>").append(cotizacion.getAsegurado().getDireccions().get(0).getParroquia().getId()).append("</parroquiaId>");
		}
		else{
			xml.append("<cantonId>").append("1201").append("</cantonId>")
			.append("<parroquiaId>").append("120153").append("</parroquiaId>");
		}

		xml.append("<direccion>")
		.append(cotizacion.getAsegurado().getDireccions().get(0).getCallePrincipal())
		.append(" ")
		.append(cotizacion.getAsegurado().getDireccions().get(0).getNumero())
		.append(" ")
		.append(cotizacion.getAsegurado().getDireccions().get(0).getCalleSecundaria())
		.append("</direccion>")
		.append("<telefono>").append(cotizacion.getAsegurado().getTelefono()).append("</telefono>")
		.append("</direccion></DireccionDTO>")
		.append("</asegurado>");
		if(endosoBeneficiario!=null){
			Entidad entidadBeneficiario=entidadDAO.buscarEntidadPorIdEnsurance(endosoBeneficiario.getBeneficiario().getCodigoEnsurance().toString());
			xml.append("<beneficiarios>")
			.append("<id>no</id>")
			.append("<entidadId>").append(endosoBeneficiario.getBeneficiario().getCodigoEnsurance()).append("</entidadId>")
			.append("<nombres>").append(endosoBeneficiario.getBeneficiario().getNombre()).append("</nombres>")
			.append("<apellidos>").append(endosoBeneficiario.getBeneficiario().getNombre()).append("</apellidos>")
			.append("<tipoIdentificacion>")
			.append(entidadBeneficiario.getTipoIdentificacion().getId()=="1" ? "c":cliente.getEntidad().getTipoIdentificacion().getId()=="2" ? "p":"r")
			.append("</tipoIdentificacion>")
			.append("<tipoEntidadId>").append(entidadBeneficiario.getTipoEntidad().getId()).append("</tipoEntidadId>")
			.append("<identificacion>").append(entidadBeneficiario.getIdentificacion()).append("</identificacion>")
			.append("<esEmpresa>")
			.append(cotizacion.getAsegurado().getTipoIdentificacion().getId()=="1" ? "false":cotizacion.getAsegurado().getTipoIdentificacion().getId()=="2" ? "false":"true")
			.append("</esEmpresa>")
			.append("<DireccionDTO>")
			.append("<direccion>")
			.append("<paisId>-1</paisId>")
			.append("<provinciaId>-1</provinciaId>")
			.append("<cantonId>-1</cantonId>")
			.append("<parroquiaId>-1</parroquiaId>")
			.append("<ciudadId>-1</ciudadId>")
			.append("<direccion>-1</direccion>")
			.append("<telefono>-1</telefono>")
			.append("</direccion>")
			.append("</DireccionDTO>")
			.append("</beneficiarios>");
		}
		else{
			xml.append("<beneficiarios>")
			.append("<id>no</id>")
			.append("<entidadId>-1</entidadId>")
			.append("<nombres>-1</nombres>")
			.append("<apellidos>-1</apellidos>")
			.append("<tipoIdentificacion>-1</tipoIdentificacion>")
			.append("<tipoEntidadId>-1</tipoEntidadId>")
			.append("<identificacion>-1</identificacion>")
			.append("<esEmpresa>-1</esEmpresa>")
			.append("<DireccionDTO>")
			.append("<direccion>")
			.append("<paisId>-1</paisId>")
			.append("<provinciaId>-1</provinciaId>")
			.append("<cantonId>-1</cantonId>")
			.append("<parroquiaId>-1</parroquiaId>")
			.append("<ciudadId>-1</ciudadId>")
			.append("<direccion>-1</direccion>")
			.append("<telefono>-1</telefono>")
			.append("</direccion>")
			.append("</DireccionDTO>")
			.append("</beneficiarios>");
		}
		xml.append("</superObjetoXML>");
		
		resultado.setGeneradoXMLCorrectamente(true);
		resultado.setXmlEmision(xml.toString());
		return resultado;
	}
}
