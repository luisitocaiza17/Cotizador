diff --git a/WebContent/dashboard/AgriParametrosPuntoVenta.jsp b/WebContent/dashboard/AgriParametrosPuntoVenta.jsp
--- a/WebContent/dashboard/AgriParametrosPuntoVenta.jsp
+++ b/WebContent/dashboard/AgriParametrosPuntoVenta.jsp
@@ -425,6 +425,7 @@
 								configuración se grabo con exito.</div>
 							<div class="form-group">
 								<input type="hidden" class="form-control" id="parametroPPVId">
+								<input type="hidden" id="idCotizacion">
 								<table style="width: 100%">
 									<tr>
 										<td colspan="2"><label style="width: 100%">Sponsor:</label></td>
diff --git a/src/com/qbe/cotizador/dao/producto/agricola/UsuariosOfflineDAO.java b/src/com/qbe/cotizador/dao/producto/agricola/UsuariosOfflineDAO.java
--- a/src/com/qbe/cotizador/dao/producto/agricola/UsuariosOfflineDAO.java
+++ b/src/com/qbe/cotizador/dao/producto/agricola/UsuariosOfflineDAO.java
@@ -1,4 +1,5 @@
 package com.qbe.cotizador.dao.producto.agricola;
 
 import com.qbe.cotizador.entitymanagerfactory.EntityManagerFactoryDAO;
+import com.qbe.cotizador.model.AgriCargaPreviaArchivoPlano;
 import com.qbe.cotizador.model.UsuariosOffline;
@@ -4,2 +5,3 @@
 import com.qbe.cotizador.model.UsuariosOffline;
+
 import java.math.BigInteger;
@@ -5,2 +7,5 @@
 import java.math.BigInteger;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.List;
@@ -6,4 +11,5 @@
 import java.util.List;
+
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
 import javax.persistence.EntityManager;
@@ -65,4 +71,33 @@
         }
         return usuarioOffline;
     }
+    
+    public List<UsuariosOffline> cargarTodosKendo(int Skip, int Take){
+				
+		Query query = null;
+		
+		String stringQuery= "SELECT c FROM UsuariosOffline c";	
+				
+		query = getEntityManager().createQuery(stringQuery);
+		
+		List<UsuariosOffline> results = new ArrayList<UsuariosOffline>();
+		results = query.setMaxResults(Take).setFirstResult(Skip).getResultList();
+		
+		return results;
+	}
+    
+    public long cargarTodosKendoPorNumero(){
+		
+		Query query = null;
+		
+		String stringQuery= "SELECT count(c.id) FROM UsuariosOffline c ";	
+		
+		query = getEntityManager().createQuery(stringQuery);
+		
+		long results = (long)query.getSingleResult();
+		
+		return results;
+	}
+    
+    
 }
\ No newline at end of file
diff --git a/src/com/qbe/cotizador/model/AgriParroquia.java b/src/com/qbe/cotizador/model/AgriParroquia.java
--- a/src/com/qbe/cotizador/model/AgriParroquia.java
+++ b/src/com/qbe/cotizador/model/AgriParroquia.java
@@ -1,6 +1,7 @@
 package com.qbe.cotizador.model;
 
 import java.io.Serializable;
+
 import javax.persistence.*;
 
 
@@ -10,7 +11,11 @@
  */
 @Entity
 @Table(name="AGRI_PARROQUIAS")
-@NamedQuery(name="AgriParroquia.obtenerPorSBS", query="SELECT a FROM AgriParroquia a where a.parroquiaSbs=:CodigoSBS")
+@NamedQueries({
+	@NamedQuery(name="AgriParroquia.buscarTodos", query="SELECT a FROM AgriParroquia a"),
+	@NamedQuery(name="AgriParroquia.obtenerPorSBS", query="SELECT a FROM AgriParroquia a where a.parroquiaSbs=:CodigoSBS")
+})
+
 public class AgriParroquia implements Serializable {
 	private static final long serialVersionUID = 1L;
 
@@ -22,6 +27,17 @@
 
 	@Column(name="PARROQUIA_SBS")
 	private String parroquiaSbs;
+	
+	@Column(name="CANTON_ID")
+	private String cantonId;
+		
+	public String getCantonId() {
+		return cantonId;
+	}
+
+	public void setCantonId(String cantonId) {
+		this.cantonId = cantonId;
+	}
 
 	public AgriParroquia() {
 	}
diff --git a/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java b/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
--- a/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
+++ b/src/com/qbe/cotizador/servicios/QBE/agricolaSucre/SolicitudAgricola.java
@@ -1480,7 +1480,9 @@
 				throw new Exception("El numero de tramite : "+tramite+" no existe.");
 			}
 			
+			
+			
 			CotizacionDetalleDAO cotizacionDetalleDAO= new CotizacionDetalleDAO();
 			CotizacionDetalle cotizacionDetalle = cotizacionDetalleDAO.buscarCotizacionDetallePorCotizacion(cotizacion).get(0);
 			AgriObjetoCotizacionDAO agriObjetoCotizacionDAO= new AgriObjetoCotizacionDAO();
 			AgriObjetoCotizacion agriObjetoCotizacion= agriObjetoCotizacionDAO.buscarPorId(new BigInteger(cotizacionDetalle.getObjetoId()));
@@ -1483,7 +1485,13 @@
 			CotizacionDetalleDAO cotizacionDetalleDAO= new CotizacionDetalleDAO();
 			CotizacionDetalle cotizacionDetalle = cotizacionDetalleDAO.buscarCotizacionDetallePorCotizacion(cotizacion).get(0);
 			AgriObjetoCotizacionDAO agriObjetoCotizacionDAO= new AgriObjetoCotizacionDAO();
 			AgriObjetoCotizacion agriObjetoCotizacion= agriObjetoCotizacionDAO.buscarPorId(new BigInteger(cotizacionDetalle.getObjetoId()));
+			
+				
+			if(cotizacion.getEstado().getNombre().equals("Pendiente de Emitir")||agriObjetoCotizacion.getConfirEmiCanal()){
+				throw new Exception("El numero de tramite : "+tramite+" no puede modificar la fecha, yá esta aprobado.");
+			}
+			
 			/*Proceso de auditoria de estados anteriores*/
 			String fechaAnterior=""+auditoria.getObjeto();
 			String fechaAnteriorSiembra="";
@@ -1654,7 +1662,8 @@
 			AgriObjetoCotizacionDAO agriObjetoCotizacionDAO= new AgriObjetoCotizacionDAO();
 			AgriObjetoCotizacion agriObjetoCotizacion= agriObjetoCotizacionDAO.buscarPorId(new BigInteger(cotizacionDetalle.getObjetoId()));
 			
+			
 			if(cotizacion.getId()==null){
 				throw new Exception("El numero de tramite : "+tramite+" no existe.");
 			}
 			
@@ -1657,7 +1666,11 @@
 			if(cotizacion.getId()==null){
 				throw new Exception("El numero de tramite : "+tramite+" no existe.");
 			}
 			
+			if(cotizacion.getEstado().getNombre().equals("Pendiente de Emitir")||agriObjetoCotizacion.getConfirEmiCanal()){
+				throw new Exception("El numero de tramite : "+tramite+" no puede modificar la fecha, yá esta aprobado.");
+			}
+			
 			String temporal=auditoria.getObjeto()+ "|||| ProvinciaAnterior : "+agriObjetoCotizacion.getProvinciaId()+ " CantonIdAnterior : "+agriObjetoCotizacion.getCantonId()+" ParroquiaIdAnterior : "+agriObjetoCotizacion.getParroquiaId()
 					+" DireccionSiembraAnterior : "+agriObjetoCotizacion.getDireccionSiembra()+" latitudAnterior : "+agriObjetoCotizacion.getLatitud()+" longitudAnterior : "+agriObjetoCotizacion.getLongitud();
 			
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriEmisionPoliza.java
@@ -27,6 +27,7 @@
 import com.qbe.cotizador.dao.producto.agricola.AgriParametroXCanalDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriParametroXPuntoVentaDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriTipoCultivoDAO;
+import com.qbe.cotizador.dao.producto.agricola.UsuariosOfflineDAO;
 import com.qbe.cotizador.dao.seguridad.TipoVariableDAO;
 import com.qbe.cotizador.dao.seguridad.VariableSistemaDAO;
 import com.qbe.cotizador.model.Agente;
@@ -52,6 +53,7 @@
 import com.qbe.cotizador.model.PuntoVenta;
 import com.qbe.cotizador.model.TipoDireccion;
 import com.qbe.cotizador.model.TipoVariable;
+import com.qbe.cotizador.model.UsuariosOffline;
 import com.qbe.cotizador.model.VariableSistema;
 import com.qbe.cotizador.model.Zona;
 import com.qbe.cotizador.transaction.cotizacion.CotizacionRespuestaTransaction;
@@ -555,9 +557,15 @@
         	variableS="CORREO_PICHINCHA";
         }
         
+        
+        String login="";
+        String password="";
+        String tipoRiesgo="";
+        String claseRiesgo="";
+        String tipoItem="";
         if(variablesistema.size() > 0) {
         	for(VariableSistema variable : variablesistema) {
         		
         		if(variable.getNombre().equals(variableS)){
         			CorreoElectronico=variable.getValor();//%COMISION DE AGENTE
         		}
@@ -558,9 +566,24 @@
         if(variablesistema.size() > 0) {
         	for(VariableSistema variable : variablesistema) {
         		
         		if(variable.getNombre().equals(variableS)){
         			CorreoElectronico=variable.getValor();//%COMISION DE AGENTE
         		}
+        		if(variable.getNombre().equals("USUARIO_EMI_AGRICOLA")){
+        			login=variable.getValor();//usuario con el que se logue para emision
+        		}
+        		if(variable.getNombre().equals("CONTRASENIA_EMI_AGRICOLA")){
+        			password=variable.getValor();//contrasenia con la que se loguea para la emision
+        		}
+        		if(variable.getNombre().equals("TIPO_RIESGO_AGRICOLA")){
+        			tipoRiesgo=variable.getValor();//contrasenia con la que se loguea para la emision
+        		}
+        		if(variable.getNombre().equals("CLASE_RIESGO_AGRICOLA")){
+        			claseRiesgo=variable.getValor();//contrasenia con la que se loguea para la emision
+        		}
+        		if(variable.getNombre().equals("TIPO_ITEM_AGRICOLA")){
+        			tipoItem=variable.getValor();//contrasenia con la que se loguea para la emision
+        		}
         	}
         }
         String agricultorTecnificado="";
@@ -571,5 +594,22 @@
         	agricultorTecnificado="No";
         }
 		
-		
+        //Encontramos la unidad de negocio
+        String unidadNegocio="";
+        
+        if(puntoVenta.getNombre().equals("COOPROGRESO")){
+        	//TODO: OJO SOLO COOPROGRESO Peticion david garzon para distingir entre masivos y agricola ganadero
+        	//encontramos el usuario que relizo la cotizacion.
+        	String nombreEjecutivo=objetoCotizacion.getUsuarioOffline();
+        	UsuariosOffline usuariosOffline = new UsuariosOffline();
+    		UsuariosOfflineDAO usuariosOfflineDAO = new UsuariosOfflineDAO();
+    		usuariosOffline=usuariosOfflineDAO.BuscarNombre(nombreEjecutivo);
+    		unidadNegocio=usuariosOffline.getUnidadNegocio();   		
+    		
+        }else{
+        	//TODO: Para canales sucre, banca comunal, Pronaca todo se emite como agricola ganadero
+        	unidadNegocio=productoXPV.getUnidadNegocio().getUnEnsurance();
+        }
+                
+        
 		StringBuilder xml=new StringBuilder("<superObjetoXML><detallesPoliza><identificador>").append(cotizacion.getId()).append("</identificador>")
@@ -575,6 +615,6 @@
 		StringBuilder xml=new StringBuilder("<superObjetoXML><detallesPoliza><identificador>").append(cotizacion.getId()).append("</identificador>")
-		.append("<login>WS_AGRICOLA</login>")
-		.append("<pass>5sMCNw4JQhUyIENa</pass>")
+		.append("<login>").append(login).append("</login>")
+		.append("<pass>").append(password).append("</pass>")
 		.append("<agenteId>").append(agente.getAgeEnsurance()).append("</agenteId>")
 		.append("<porcentajeComision>").append(cotizacion.getPorcentajeComision()).append("</porcentajeComision>")
 		.append("<valorprima>").append(cotizacion.getPrimaNetaTotal()).append("</valorprima>")
@@ -585,12 +625,12 @@
 		.append("<puntoVentaId>")
 		.append(puntoVenta.getPtoEnsurance())
 		.append("</puntoVentaId>")
-		.append("<tipoRiesgoId>8126480</tipoRiesgoId>")
-		.append("<claseRiesgoId>8060943</claseRiesgoId>")
-		.append("<tipoItemId>102</tipoItemId>")
+		.append("<tipoRiesgoId>").append(tipoRiesgo).append("</tipoRiesgoId>")
+		.append("<claseRiesgoId>").append(claseRiesgo).append("</claseRiesgoId>")
+		.append("<tipoItemId>").append(tipoItem).append("</tipoItemId>")
 		.append("<monedaId>11141120</monedaId>")
 		.append("<plantillaId>").append(plantillaId).append("</plantillaId>")
 		.append("<firmaDigitalId>1</firmaDigitalId>")
 		.append("<usuarioActualiza>10822106152960</usuarioActualiza>")
 		.append("<ramoId>7274513</ramoId>")
 		.append("<mnemotecnicoRamo>SA</mnemotecnicoRamo>")
@@ -591,10 +631,10 @@
 		.append("<monedaId>11141120</monedaId>")
 		.append("<plantillaId>").append(plantillaId).append("</plantillaId>")
 		.append("<firmaDigitalId>1</firmaDigitalId>")
 		.append("<usuarioActualiza>10822106152960</usuarioActualiza>")
 		.append("<ramoId>7274513</ramoId>")
 		.append("<mnemotecnicoRamo>SA</mnemotecnicoRamo>")
-		.append("<unidadNegocioId>").append(productoXPV.getUnidadNegocio().getUnEnsurance()).append("</unidadNegocioId>")
+		.append("<unidadNegocioId>").append(unidadNegocio).append("</unidadNegocioId>")
 		.append("<unidadProduccionId>").append(productoXPV.getUnidadProduccion().getUpEnsurance()).append("</unidadProduccionId>")
 		//NUMERO DE COTIZACION 2
 		.append("<numeroPoliza>").append(objetoCotizacion.getIdCotizacion2()).append("</numeroPoliza>")
diff --git a/src/com/qbe/cotizador/servlets/producto/agricola/AgriExportarDatos.java b/src/com/qbe/cotizador/servlets/producto/agricola/AgriExportarDatos.java
--- a/src/com/qbe/cotizador/servlets/producto/agricola/AgriExportarDatos.java
+++ b/src/com/qbe/cotizador/servlets/producto/agricola/AgriExportarDatos.java
@@ -36,6 +36,7 @@
 import com.qbe.cotizador.dao.producto.agricola.AgriCultivoCanalDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriParametroXCanalDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriParametroXPuntoVentaDAO;
+import com.qbe.cotizador.dao.producto.agricola.AgriParroquiaDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriReglaDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriTipoCultivoDAO;
 import com.qbe.cotizador.dao.producto.agricola.AgriTipoCultivoXTipoCalculoDAO;
@@ -48,6 +49,7 @@
 import com.qbe.cotizador.model.AgriCultivoCanal;
 import com.qbe.cotizador.model.AgriParametroXCanal;
 import com.qbe.cotizador.model.AgriParametroXPuntoVenta;
+import com.qbe.cotizador.model.AgriParroquia;
 import com.qbe.cotizador.model.AgriRegla;
 import com.qbe.cotizador.model.AgriTipoCultivo;
 import com.qbe.cotizador.model.AgriTipoCultivoXTipoCalculo;
@@ -278,8 +280,9 @@
 			listaParametros.add(nuevoParametro);
 		}
 
-		//Exportar datos de los cantones
-		ParroquiaDAO parroquiaDAO=new ParroquiaDAO();
+		//Exportar datos de las parroquias
+		//enviamos los que estan en la tabla agriparroquias ya que es la mas completa que se tiene, hasta que se iguale correctamente la tabla principal de cantones
+		/*ParroquiaDAO parroquiaDAO=new ParroquiaDAO();
 		List<Parroquia> listadoParroquias = parroquiaDAO.buscarTodos();
 		List<com.qbe.cotizador.servlets.producto.agricola.Parroquia> listaParroquias=new ArrayList<com.qbe.cotizador.servlets.producto.agricola.Parroquia>();
 		for(Parroquia parroquiaActual:listadoParroquias){
@@ -288,4 +291,15 @@
 			nuevoParroquia.setParroquiaId(parroquiaActual.getId());
 			nuevoParroquia.setNombre(parroquiaActual.getNombre());
 			listaParroquias.add(nuevoParroquia);
+		}*/
+
+		AgriParroquiaDAO parroquiaDAO=new AgriParroquiaDAO();
+		List<AgriParroquia> listadoParroquias = parroquiaDAO.buscarTodos();
+		List<com.qbe.cotizador.servlets.producto.agricola.Parroquia> listaParroquias=new ArrayList<com.qbe.cotizador.servlets.producto.agricola.Parroquia>();
+		for(AgriParroquia parroquiaActual:listadoParroquias){
+			com.qbe.cotizador.servlets.producto.agricola.Parroquia nuevoParroquia=new com.qbe.cotizador.servlets.producto.agricola.Parroquia();
+			nuevoParroquia.setCantonId(parroquiaActual.getCantonId());
+			nuevoParroquia.setParroquiaId(""+parroquiaActual.getId());
+			nuevoParroquia.setNombre(parroquiaActual.getParroquiaNombre());
+			listaParroquias.add(nuevoParroquia);
 		}
@@ -291,5 +305,5 @@
 		}
-
+		
 		//Exporto los datos de los puntos de venta
 		GrupoPorProductoDAO grupoPorProducto=new GrupoPorProductoDAO();
 		ProductoXPuntoVentaDAO productoXPuntoVentaDAO=new ProductoXPuntoVentaDAO();
