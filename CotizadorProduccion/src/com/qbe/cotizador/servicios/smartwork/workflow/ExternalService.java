
package com.qbe.cotizador.servicios.smartwork.workflow;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.qbe.cotizador.dao.seguridad.VariableSistemaDAO;
import com.qbe.cotizador.model.VariableSistema;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ExternalService", targetNamespace = "http://smartwork.com.ec/", wsdlLocation = "http://10.10.21.40:8080/BPMServer/ExternalService.asmx?WSDL")
public class ExternalService
    extends Service
{

    private final static URL EXTERNALSERVICE_WSDL_LOCATION;
    private final static WebServiceException EXTERNALSERVICE_EXCEPTION;
    private final static QName EXTERNALSERVICE_QNAME = new QName("http://smartwork.com.ec/", "ExternalService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
          VariableSistemaDAO vsDAO=new VariableSistemaDAO();
          VariableSistema  vs=vsDAO.buscarPorNombre("URL_SERVICIO_WORKFLOW");
          
            url = new URL(vs.getValor());
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EXTERNALSERVICE_WSDL_LOCATION = url;
        EXTERNALSERVICE_EXCEPTION = e;
    }

    public ExternalService() {
        super(__getWsdlLocation(), EXTERNALSERVICE_QNAME);
    }

    public ExternalService(WebServiceFeature... features) {
        super(__getWsdlLocation(), EXTERNALSERVICE_QNAME, features);
    }

    public ExternalService(URL wsdlLocation) {
        super(wsdlLocation, EXTERNALSERVICE_QNAME);
    }

    public ExternalService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EXTERNALSERVICE_QNAME, features);
    }

    public ExternalService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ExternalService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ExternalServiceSoap
     */
    @WebEndpoint(name = "ExternalServiceSoap")
    public ExternalServiceSoap getExternalServiceSoap() {
        return super.getPort(new QName("http://smartwork.com.ec/", "ExternalServiceSoap"), ExternalServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExternalServiceSoap
     */
    @WebEndpoint(name = "ExternalServiceSoap")
    public ExternalServiceSoap getExternalServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://smartwork.com.ec/", "ExternalServiceSoap"), ExternalServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EXTERNALSERVICE_EXCEPTION!= null) {
            throw EXTERNALSERVICE_EXCEPTION;
        }
        return EXTERNALSERVICE_WSDL_LOCATION;
    }

}
