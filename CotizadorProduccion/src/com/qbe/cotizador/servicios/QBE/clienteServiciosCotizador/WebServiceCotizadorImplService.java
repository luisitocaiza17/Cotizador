
package com.qbe.cotizador.servicios.QBE.clienteServiciosCotizador;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.qbe.cotizador.dao.seguridad.VariableSistemaDAO;
import com.qbe.cotizador.model.VariableSistema;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WebServiceCotizadorImplService", targetNamespace = "http://cotizador.implementacion.servicios.qbe.com/", wsdlLocation = "http://10.10.21.116:8080/servicios/cotizador?wsdl")
public class WebServiceCotizadorImplService
    extends Service
{

    private final static URL WEBSERVICECOTIZADORIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException WEBSERVICECOTIZADORIMPLSERVICE_EXCEPTION;
    private final static QName WEBSERVICECOTIZADORIMPLSERVICE_QNAME = new QName("http://cotizador.implementacion.servicios.qbe.com/", "WebServiceCotizadorImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {        	            
        	VariableSistemaDAO variableSistemaDAO = new VariableSistemaDAO();
        	VariableSistema variableSistema = variableSistemaDAO.buscarPorNombre("URL_SERVICIOS_COTIZADOR");
        	url = new URL(variableSistema.getValor());        	        	            
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEBSERVICECOTIZADORIMPLSERVICE_WSDL_LOCATION = url;
        WEBSERVICECOTIZADORIMPLSERVICE_EXCEPTION = e;
    }

    public WebServiceCotizadorImplService() {
        super(__getWsdlLocation(), WEBSERVICECOTIZADORIMPLSERVICE_QNAME);
    }

    public WebServiceCotizadorImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSERVICECOTIZADORIMPLSERVICE_QNAME, features);
    }

    public WebServiceCotizadorImplService(URL wsdlLocation) {
        super(wsdlLocation, WEBSERVICECOTIZADORIMPLSERVICE_QNAME);
    }

    public WebServiceCotizadorImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSERVICECOTIZADORIMPLSERVICE_QNAME, features);
    }

    public WebServiceCotizadorImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServiceCotizadorImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebServiceCotizadorInterface
     */
    @WebEndpoint(name = "WebServiceCotizadorImplPort")
    public WebServiceCotizadorInterface getWebServiceCotizadorImplPort() {
        return super.getPort(new QName("http://cotizador.implementacion.servicios.qbe.com/", "WebServiceCotizadorImplPort"), WebServiceCotizadorInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServiceCotizadorInterface
     */
    @WebEndpoint(name = "WebServiceCotizadorImplPort")
    public WebServiceCotizadorInterface getWebServiceCotizadorImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://cotizador.implementacion.servicios.qbe.com/", "WebServiceCotizadorImplPort"), WebServiceCotizadorInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSERVICECOTIZADORIMPLSERVICE_EXCEPTION!= null) {
            throw WEBSERVICECOTIZADORIMPLSERVICE_EXCEPTION;
        }
        return WEBSERVICECOTIZADORIMPLSERVICE_WSDL_LOCATION;
    }

}
